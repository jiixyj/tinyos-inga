<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="56:BlinkRavenAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b0e9cb71d90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0e9ca4d940"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b0e9ca4d940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0e9ca4b870"/></to>
    </wire>
    <wire loc="58:BlinkRavenAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b0e9cb6fc08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0e9cd1ea60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b0e9cd1ea60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0e9cd30b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:BlinkRavenAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2b0e9cb6cd60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0e9ced6020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b0e9ced6020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0e9cd30b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:BlinkRavenAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2b0e9cb77020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0e9cef0550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b0e9cef0550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0e9cd30b18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:BlinkRavenAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0e9cb8b760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0e9cbbd8f8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0e9cbbd8f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0e9cbb6110"/></to>
    </wire>
    <wire loc="62:BlinkRavenAppC.nc">
      <from><interface-ref name="Raven" scoped="" ref="0x2b0e9cba9d68"/></from>
      <to><interface-ref name="Raven" scoped="" ref="0x2b0e9cbdc570"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/raven/RavenC.nc">
      <from><interface-ref name="Raven" scoped="" ref="0x2b0e9cbdc570"/></from>
      <to><interface-ref name="Raven" scoped="" ref="0x2b0e9cbeb020"/></to>
    </wire>
    <wire loc="63:BlinkRavenAppC.nc">
      <from><interface-ref name="Eui64" scoped="" ref="0x2b0e9cba7758"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b0e9ceea4a8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/platforms/raven/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b0e9ceea4a8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b0e9cee7378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9d3376e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/raven/LocalIeeeEui64C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9cee7a40"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9cd294a8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b0e9ccc17f8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b0e9ccbc688"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9cc46610"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/raven/RavenC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9cbebd08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b0e9cb52020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b0e9c95ce38"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b0e9c95ce38"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b0e9ca0f448"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0e9cb529f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9ca4ed10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0e9ca4ed10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9ca55c10"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9cb50140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0e9ca52b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0e9cb3a650"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b0e9ca5da38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9cb3a020"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b0e9ca5d370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9cbe3460"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b0e9ca5d370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0e9ca58140"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0e9ca58140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0e9ca65b00"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0e9ca587d0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b0e9ca569a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b0e9ca6acd0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b0e9ca6f4d0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b0e9ca6f4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0e9cadd740"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0e9ca60020"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b0e9ca587d0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b0e9ca90af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0e9cb04020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0e9cb04020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d234480"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b0e9ca7a7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0e9cadba50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0e9cadba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d0f9480"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b0e9ca78af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0e9cae3bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0e9cae3bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d14a3e0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b0e9ca7bc78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0e9caf2740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0e9caf2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d1b9480"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b0e9ca72020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0e9cae02a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0e9cae02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d0e1480"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b0e9ca74020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0e9caef020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0e9caef020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d16a480"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b0e9ca851a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0e9caffbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0e9caffbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d1db480"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b0e9ca8b020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0e9cb11430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0e9cb11430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d22a480"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b0e9ca984d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0e9cb0e8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0e9cb0e8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d24f480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0e9cadd740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d0ff480"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b0e9ca7f658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0e9caec430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0e9caec430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d161480"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b0e9ca7d968"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0e9caf4500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0e9caf4500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d1bf3e0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b0e9ca8fc78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0e9cb03120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0e9cb03120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d231480"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b0e9ca79968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0e9cadabd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0e9cadabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d0f6480"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b0e9ca77c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0e9cae2d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0e9cae2d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d147480"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b0e9ca88e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0e9caf18c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0e9caf18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d1b6480"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b0e9ca711a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0e9cadf430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0e9cadf430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d106480"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b0e9ca811a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0e9caee120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0e9caee120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d167480"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b0e9ca84348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0e9cafed60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0e9cafed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d1d8480"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b0e9ca8a1a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0e9cb105b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0e9cb105b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d227480"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b0e9ca82658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0e9cb06e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0e9cb06e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d2373e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b0e9ca6d658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0e9cadc8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0e9cadc8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d0fc480"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b0e9ca7e7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0e9caeb5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0e9caeb5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d15e480"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b0e9ca7caf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0e9caf35b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0e9caf35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d1bc480"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b0e9ca8ee00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0e9cb022a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0e9cb022a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d22e480"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b0e9ca64db8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0e9cad21e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0e9cad21e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d0e43e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b0e9ca76e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0e9cae1e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0e9cae1e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d16e480"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b0e9ca86020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0e9cb00a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0e9cb00a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d1de480"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b0e9ca89348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0e9cb0f740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0e9cb0f740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d224480"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b0e9ca834d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0e9cafce18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0e9cafce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d1d5480"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b0e9ca70348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0e9cade5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0e9cade5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d102480"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b0e9ca804d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0e9caed2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0e9caed2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0e9d164480"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9c967728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9ca0e2b0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b0e9ca0b758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b0e9ca2a648"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0e9ca320d0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0e9cdea0c0"/></to>
    </wire>
    <wire loc="54:BlinkRavenC.nc">
      <from><interface-ref name="waitforeui" scoped="" ref="0x2b0e9cb897c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9c967728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0e9cbe3460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9cbb9b08"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b0e9cbb5850"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b0e9cbd2060"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b0e9cbd2060"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b0e9ca711a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b0e9cbb4ae0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b0e9cbe51f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b0e9cbe51f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b0e9ca72020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b0e9cbc7c68"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b0e9cbe4378"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b0e9cbe4378"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b0e9ca64db8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/raven/RavenC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b0e9cbf3c98"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b0e9cc3c188"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b0e9cc3c188"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b0e9cc89b90"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/raven/RavenC.nc">
      <from><interface-ref name="UartCtl" scoped="" ref="0x2b0e9cbf04e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b0e9cbede70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b0e9cbede70"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b0e9cc46be8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/platforms/raven/RavenP.nc">
      <from><interface-ref name="received" scoped="" ref="0x2b0e9cc14020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9c967728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b0e9cc4e978"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b0e9cc89430"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0e9cc9c2d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0e9cc4d188"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b0e9cc88c18"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0e9ccae060"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0e9ccae060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0e9ccbe020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b0e9cc87470"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0e9ccae8b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0e9ccae8b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0e9ccbe8b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b0e9cc87c10"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b0e9ccad158"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b0e9ccad158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b0e9ccbd158"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b0e9ccab860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b0e9ccba020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b0e9ccac6b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b0e9ccbcd98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b0e9ccab020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b0e9ccbb6b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0e9ccb94c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0e9ca52b98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b0e9ccb81a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b0e9ca34a80"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b0e9cd30b18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0e9cd261c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b0e9cd261c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0e9cebc5e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0e9cd294a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9cd38e70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0e9cd37980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0e9cecd128"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/raven/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0e9cd38e70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9ce40148"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b0e9ceb6858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0e9ce6dab0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0e9ce68c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0e9cd46838"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/raven/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0e9cd46838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0e9ce408f0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0e9cec4330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b0e9cd44c80"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/raven/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b0e9cd44c80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0e9ce3ca90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b0e9ce3ca90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0e9d2bca90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b0e9ce40148"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0e9d2c00e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0e9ce408f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0e9d2c0888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b0e9d2bab98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0e9cdcc248"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0e9cdcc248"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0e9cddbb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0e9d2b4b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0e9cdc6220"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0e9cdc6220"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0e9cdd4b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b0e9d2b3e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0e9cdc5670"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0e9cdc5670"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0e9cdd3e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b0e9d2e0060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b0e9cdde850"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b0e9cdde850"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b0e9cdea7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b0e9ce64cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9c967728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b0e9ceb1930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9c967728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/platforms/raven/LocalIeeeEui64C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0e9cf0ed98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0e9cf1d1d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b0e9cf1d1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0e9cf32538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/raven/LocalIeeeEui64C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9cef6280"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9d0b8020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9d0b8020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9cf319b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/raven/LocalIeeeEui64C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b0e9cee4080"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0e9ca4d940"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0e9cf32538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0e9cfaf020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9cf319b0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9cfafe60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b0e9cfe4a78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0e9cfa4838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b0e9cfa4838"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0e9d334d80"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0e9cfe3888"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9d05d700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x2b0e9d002318"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x2b0e9d059318"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0e9cf9e100"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0e9cfffe60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0e9cf9edb8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0e9cfa3dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0e9cfa3dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0e9d332268"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b0e9d059930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b0e9d0767d0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b0e9d0767d0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b0e9d06e020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b0e9d0552e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0e9d0a8358"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b0e9d054908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0e9d0a8358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b0e9cfa3698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b0e9d333af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0e9cfa29d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0e9d332e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0e9d3316f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0e9cfa13c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b0e9d331e78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b0e9d337cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b0e9d32e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9c967728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x2b0e9d06c9c8"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b0e9ca7d968"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x2b0e9d06bc80"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b0e9ca7caf0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="43:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="41:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformP.nc" safe="">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="40:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="43:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformP.nc">
        <short>&#10; The raven portion of a mica-family initialization that is&#10; mote-specific.</short>
        <long>&#10; The raven portion of a mica-family initialization that is&#10; mote-specific.&#10; &#10; @author David Gay&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega1284's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega1284's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="57:/opt/tinyos-2.1.1/tos/platforms/raven/MeasureClockC.nc">
      <documentation loc="48:/opt/tinyos-2.1.1/tos/platforms/raven/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="77:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkRavenC" loc="42:BlinkRavenC.nc" safe="">
      <documentation loc="33:BlinkRavenC.nc">
        <short>&#10; Implementation for BlinkRaven application.</short>
        <long>&#10; Implementation for BlinkRaven application.  Toggle the red LED when a&#10; Timer fires and send some infos to LCD.&#10;&#10; @author: Martin Cerveny&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RavenC" loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/RavenC.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/platforms/raven/raven.h">
        <short>&#10; Commands for controlling platform coprocessor (atmega3290) via Uart0 (SIPC - serial inter-platform communication).</short>
        <long>&#10; Commands for controlling platform coprocessor (atmega3290) via Uart0 (SIPC - serial inter-platform communication).&#10;&#10;  @author Martin Cerveny&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RavenP" loc="40:/opt/tinyos-2.1.1/tos/platforms/raven/RavenP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/platforms/raven/raven.h">
        <short>&#10; Commands for controlling platform coprocessor (atmega3290) via Uart0 (SIPC - serial inter-platform communication).</short>
        <long>&#10; Commands for controlling platform coprocessor (atmega3290) via Uart0 (SIPC - serial inter-platform communication).&#10;&#10;  @author Martin Cerveny&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="113:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1284 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1284 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkRavenAppC.Timer0" loc="36(BlinkRavenAppC.Timer0):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="24:/opt/tinyos-2.1.1/tos/platforms/raven/AlarmCounterMilliP.nc">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="60(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP" loc="60(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1284AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0e9cd57020"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1284Timer2AsyncC" loc="78:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1284Timer2AsyncP" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkRavenAppC.Timer1" loc="36(BlinkRavenAppC.Timer1):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkRavenAppC.Timer2" loc="36(BlinkRavenAppC.Timer2):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64C" loc="36:/opt/tinyos-2.1.1/tos/platforms/raven/LocalIeeeEui64C.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/raven/LocalIeeeEui64C.nc">
        <short>&#10; </short>
        <long>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RavenIeeeEui64P" loc="41:/opt/tinyos-2.1.1/tos/platforms/raven/RavenIeeeEui64P.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/platforms/raven/RavenIeeeEui64P.nc">
        <short>&#10; EUI64 reader.</short>
        <long>&#10; EUI64 reader.&#10;&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C.Atm128I2CMasterC" loc="43(LocalIeeeEui64C.Atm128I2CMasterC):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="75(Atm128I2CMasterP.Master):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega1284 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega1284 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0e9ca95748" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0e9ca95a90" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0e9ca95dd8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0e9caa5020" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0e9caa5388" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0e9caa56f0" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b0e9caa5a20" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0e9cd57020" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0e9cd57020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0e9cd57310" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1284AlarmAsyncP" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0e9cd4e770" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
          <component-ref qname="Atm1284AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0e9cd4e770"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0e9cd4ea60" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
          <component-ref qname="Atm1284AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0e9cd35c60" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0e9cd35c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0e9ce80cc8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0e9ce80cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b0e9ce7d020" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0e9cecf9f0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0e9cecf9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b0e9cf285a0" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b0e9cf3a888" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b0e9cf601b0" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b0e9ca4fd50" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9ca4fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca4e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b0e9ca4d940" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0e9ca4d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0e9ca4dc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0e9ca569a0" loc="51:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0e9ca569a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca56cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9ca4ed10" loc="45:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9ca4ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca4a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b0e9ca52b98" loc="49:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0e9ca52b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0e9ca56020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0e9ca561a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0e9ca56330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0e9ca564b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0e9ca56640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b0e9ca5d370" loc="43:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b0e9ca5d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca5d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9ca55c10" loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9ca55c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b0e9ca5da38" loc="44:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b0e9ca5da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca5dd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0e9ca587d0" loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0e9ca587d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca58b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0e9ca58140" loc="41:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0e9ca58140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca58490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0e9ca60020" loc="47:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0e9ca60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca60370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b0e9ca6acd0" loc="46:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b0e9ca6acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca610a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca61228"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca613b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca61538"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca616c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca61848"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca619d0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca61b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0e9ca65b00" loc="45:/opt/tinyos-2.1.1/tos/platforms/raven/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0e9ca65b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca65e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b0e9ca90af0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b0e9ca90af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca90e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca8f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca8f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca8f330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca8f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca8f640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca8f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca8f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b0e9ca7a7e0" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b0e9ca7a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca7ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca7acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca7ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca79020"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca79330"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca794b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca79640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b0e9ca78af0" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b0e9ca78af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca78e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca77020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca771a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca77330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca774b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca77640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca777c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca77950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b0e9ca7bc78" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b0e9ca7bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca88020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca881a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca88330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca884b8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca88640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca887c8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca88950"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca88ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b0e9ca72020" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b0e9ca72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca72370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca724f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca72680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca72808"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca72990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca72b18"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca72ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca72e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b0e9ca74020" loc="58:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b0e9ca74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca74370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca744f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca74680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca74808"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca74990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca74b18"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca74ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca74e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b0e9ca851a0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b0e9ca851a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca854f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca85678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca85800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca85988"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca85b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca85c98"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca85e20"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b0e9ca8b020" loc="77:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b0e9ca8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca8b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca8b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca8b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca8b808"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca8b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca8bb18"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca8bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca8be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b0e9ca984d0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b0e9ca984d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca98820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca989a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca98b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca98cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca98e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca97020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca97330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b0e9ca6f4d0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b0e9ca6f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca6f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca6f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca6fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca6fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca6fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca6d020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca6d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca6d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b0e9ca7f658" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b0e9ca7f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca7f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca7fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca7fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca7fe40"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca7e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca7e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca7e330"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca7e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b0e9ca7d968" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b0e9ca7d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca7dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca7de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca7c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca7c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca7c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca7c640"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca7c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b0e9ca8fc78" loc="75:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b0e9ca8fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca8e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca8e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca8e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca8e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca8e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca8e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca8e950"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca8ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b0e9ca79968" loc="53:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b0e9ca79968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca79cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca79e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca78020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca781a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca78330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca784b8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca78640"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b0e9ca77c78" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b0e9ca77c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca76020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca761a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca76330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca764b8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca76640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca767c8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca76950"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca76ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b0e9ca88e00" loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b0e9ca88e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca871a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca87330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca874b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca87640"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca877c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca87950"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca87ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca87c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b0e9ca711a0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b0e9ca711a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca714f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca71678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca71800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca71988"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca71b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca71c98"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca71e20"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b0e9ca811a0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b0e9ca811a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca815f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca81778"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca81900"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca81a88"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca81c10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca81d98"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca80020"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b0e9ca84348" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b0e9ca84348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca84698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca84820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca849a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca84b30"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca84cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca84e40"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca83020"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b0e9ca8a1a0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b0e9ca8a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca8a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca8a678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca8a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca8a988"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca8ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca8ac98"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca8ae20"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b0e9ca82658" loc="73:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b0e9ca82658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca82ba8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca82d30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca90020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca901a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca90330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca904b8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca90640"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca907c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b0e9ca6d658" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b0e9ca6d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca6d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca6db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca6dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca6de40"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca7a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca7a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca7a330"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca7a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b0e9ca7e7e0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b0e9ca7e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca7eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca7ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca7ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca7d020"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca7d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca7d330"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca7d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca7d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b0e9ca7caf0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b0e9ca7caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca7ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca7b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca7b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca7b330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca7b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca7b640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca7b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca7b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b0e9ca8ee00" loc="76:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b0e9ca8ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca8c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca8c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca8c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca8c640"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca8c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca8c950"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca8cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca8cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b0e9ca64db8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b0e9ca64db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca73170"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca732f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca73480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca73608"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca73790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca73918"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca73aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca73c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b0e9ca76e00" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b0e9ca76e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca751a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca75330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca754b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca75640"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca757c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca75950"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca75ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca75c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b0e9ca86020" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b0e9ca86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca86370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca864f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca86680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca86808"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca86990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca86b18"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca86ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca86e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b0e9ca89348" loc="79:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b0e9ca89348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca89698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca89820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca899a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca89b30"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca89cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca89e40"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca98020"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b0e9ca834d0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b0e9ca834d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca83820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca839a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca83b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca83cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca83e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca82020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca821a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca82330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b0e9ca70348" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b0e9ca70348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca70698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca70820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca709a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca70b30"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca70cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca70e40"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca6f020"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca6f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b0e9ca804d0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b0e9ca804d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9ca80820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9ca809a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9ca80b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9ca80cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9ca80e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9ca7f020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9ca7f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9ca7f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0e9cadf430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0e9cadf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cadf780"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cadf908"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cadfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cadfc18"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cadfda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cade020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cade1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cade330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0e9cadc8c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0e9cadc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cadcc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cadcda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cadb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cadb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cadb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cadb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cadb640"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cadb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0e9cad21e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0e9cad21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cad2538"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cad26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cad2848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cad29d0"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cad2b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cad2ce0"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cad2e68"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cae0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0e9cade5b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0e9cade5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cade908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cadea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cadec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cadeda0"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cadd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cadd1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cadd330"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cadd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0e9cadba50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0e9cadba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cadbda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cada020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cada1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cada330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cada4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cada640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cada7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cada950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0e9cae02a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0e9cae02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cae05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cae0780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cae0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cae0a90"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cae0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cae0da0"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cadf020"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cadf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0e9cadd740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0e9cadd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cadda90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caddc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caddda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cadc020"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cadc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cadc330"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cadc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cadc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0e9cadabd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0e9cadabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cad9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cad91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cad9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cad94b8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cad9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cad97c8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cad9950"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cad9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d0e43e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d0e43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d0e4730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d0e48b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d0e4a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d0e4bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d0e4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d0e3020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d0e31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d0e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d0e1480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d0e1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d0e17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d0e1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d0e1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d0e1c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d0e1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d0e0020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d0e01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d0e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d106480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d106480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1067d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d106958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d106ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d106c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d106df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d104020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d104330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d102480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d102480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1027d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d102958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d102ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d102c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d102df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d101020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d101330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d0ff480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d0ff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d0ff7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d0ff958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d0ffae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d0ffc68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d0ffdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d0fe020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d0fe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d0fe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d0fc480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d0fc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d0fc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d0fc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d0fcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d0fcc68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d0fcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d0fb020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d0fb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d0fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d0f9480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d0f9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d0f97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d0f9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d0f9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d0f9c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d0f9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d0f8020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d0f81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d0f8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d0f6480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d0f6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d0f67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d0f6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d0f6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d0f6c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d0f6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d0f5020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d0f51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d0f5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0e9cae1e18" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0e9cae1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caf01a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caf0330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caf04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caf0640"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caf07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caf0950"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caf0ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caf0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0e9caed2a8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0e9caed2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caed5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caed780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caed908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caeda90"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caedc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caedda0"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caec020"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0e9cae3bd0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0e9cae3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cae2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cae21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cae2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cae24b8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cae2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cae27c8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cae2950"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cae2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0e9caef020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0e9caef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caef370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caef4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caef680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caef808"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caef990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caefb18"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caefca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caefe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0e9caec430" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0e9caec430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caec780"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caec908"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caeca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caecc18"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caecda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caeb020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caeb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caeb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0e9cae2d60" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0e9cae2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cae10d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cae1260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cae13e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cae1570"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cae16f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cae1880"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cae1a08"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cae1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0e9caee120" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0e9caee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caee470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caee5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caee780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caee908"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caeea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caeec18"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caeeda0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0e9caeb5b8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0e9caeb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caeb908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caeba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caebc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caebda0"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caea1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caea330"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d14a3e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d14a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d14a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d14a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d14aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d14abc8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d14ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d149020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1491a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d149330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d147480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d147480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1477d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d147958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d147ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d147c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d147df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d146020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1461a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d146330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d16e480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d16e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d16e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d16e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d16eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d16ec68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d16edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d16c020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d16c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d16c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d16a480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d16a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d16a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d16a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d16aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d16ac68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d16adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d169020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1691a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d169330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d167480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d167480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1677d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d167958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d167ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d167c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d167df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d166020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1661a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d166330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d164480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d164480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1647d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d164958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d164ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d164c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d164df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d163020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1631a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d163330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d161480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d161480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1617d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d161958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d161ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d161c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d161df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d160020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1601a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d160330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d15e480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d15e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d15e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d15e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d15eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d15ec68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d15edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d15d020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d15d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d15d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0e9caf2740" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0e9caf2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caf2a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caf2c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caf2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caf1020"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caf11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caf1330"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caf14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caf1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0e9caffbd8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0e9caffbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cafe020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cafe1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cafe330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cafe4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cafe640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cafe7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cafe950"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cafead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0e9caf4500" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0e9caf4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caf4850"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caf49d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caf4b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caf4ce8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caf4e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caf3020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caf31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caf3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0e9caf18c8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0e9caf18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caf1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caf1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb00020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb001a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb00330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb004b8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb00640"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb007c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0e9cafed60" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0e9cafed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cafc0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cafc260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cafc3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cafc570"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cafc6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cafc880"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cafca08"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cafcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0e9caf35b8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0e9caf35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9caf3908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caf3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caf3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caf3da0"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caf2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caf21a8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caf2330"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caf24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0e9cb00a50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0e9cb00a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb00da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9caff020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9caff1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9caff330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9caff4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9caff640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9caff7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9caff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0e9cafce18" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0e9cafce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cafb1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cafb330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cafb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cafb640"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cafb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cafb950"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cafbad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cafbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d1bf3e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d1bf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1bf730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d1bf8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d1bfa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d1bfbc8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d1bfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d1be020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1be1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d1be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d1bc480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d1bc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1bc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d1bc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d1bcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d1bcc68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d1bcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d1bb020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1bb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d1bb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d1b9480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d1b9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1b97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d1b9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d1b9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d1b9c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d1b9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d1b8020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1b81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d1b8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d1b6480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d1b6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1b67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d1b6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d1b6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d1b6c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d1b6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d1e0020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1e01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d1e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d1de480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d1de480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1de7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d1de958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d1deae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d1dec68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d1dedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d1dd020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1dd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d1dd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d1db480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d1db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1db7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d1db958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d1dbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d1dbc68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d1dbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d1da020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1da1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d1da330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d1d8480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d1d8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1d87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d1d8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d1d8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d1d8c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d1d8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d1d7020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1d71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d1d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d1d5480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d1d5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d1d57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d1d5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d1d5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d1d5c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d1d5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d1d4020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d1d41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d1d4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0e9cb03120" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0e9cb03120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb03470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cb035f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb03780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb03908"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb03a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb03c18"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb03da0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0e9cb105b8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0e9cb105b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb10908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cb10a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb10c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb10da0"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb0f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb0f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb0f330"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb0f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0e9cb06e40" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0e9cb06e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb051c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cb05348"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb054d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb05658"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb057e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb05968"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb05af0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb05c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0e9cb022a8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0e9cb022a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb025f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cb02780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb02908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb02a90"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb02c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb02da0"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb11020"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0e9cb0f740" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0e9cb0f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb0fa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cb0fc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb0fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb0e020"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb0e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb0e330"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb0e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb0e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0e9cb04020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0e9cb04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb04370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cb044f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb04680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb04808"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb04990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb04b18"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb04ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb04e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0e9cb11430" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0e9cb11430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb11780"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cb11908"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb11a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb11c18"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb11da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb10020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb101a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb10330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0e9cb0e8c8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0e9cb0e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cb0ec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cb0eda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cb0d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cb0d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb0d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cb0d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb0d640"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cb0d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d2373e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d2373e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d237730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d2378b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d237a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d237bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d237d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d236020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d2361a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d236330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d234480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d234480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d2347d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d234958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d234ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d234c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d234df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d233020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d2331a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d233330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d231480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d231480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d2317d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d231958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d231ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d231c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d231df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d230020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d2301a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d230330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d22e480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d22e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d22e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d22e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d22eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d22ec68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d22edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d22c020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d22c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d22c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d22a480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d22a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d22a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d22a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d22aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d22ac68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d22adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d229020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d2291a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d229330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d227480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d227480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d2277d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d227958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d227ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d227c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d227df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d226020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d2261a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d226330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d224480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d224480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d2247d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d224958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d224ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d224c68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d224df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d251020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d2511a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d251330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0e9d24f480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0e9d24f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d24f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d24f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d24fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d24fc68"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d24fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d24e020"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d24e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d24e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9cb3a020" loc="62:/opt/tinyos-2.1.1/tos/platforms/raven/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9cb3a020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b0e9c93cb30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b0e9c93cb30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cb3a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b0e9cb3a650" loc="63:/opt/tinyos-2.1.1/tos/platforms/raven/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0e9cb3a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0e9cb3a9a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0e9cb3ab28"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0e9cb3acb0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0e9cb3ae38"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0e9cb39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b0e9cb50140" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9cb50140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cb50490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b0e9ca4b870" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0e9ca4b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0e9ca4bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b0e9cb529f8" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0e9cb529f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cb52d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b0e9cb52020" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0e9cb52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cb52370"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0e9cb524f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0e9cb52680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b0e9c967728" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9c967728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0e9c967a78"/>
        <function-ref name="runTask" scoped="" ref="0x2b0e9c967c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b0e9c95ce38" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0e9c95ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9c9531c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0e9c953348"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0e9c9534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b0e9ca0e2b0" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b0e9ca0e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0e9ca0e600"/>
        <function-ref name="runTask" scoped="" ref="0x2b0e9ca0e788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b0e9ca0b758" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b0e9ca0b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b0e9ca0baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b0e9ca0f448" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0e9ca0f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ca0f798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0e9ca0f920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0e9ca0faa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b0e9ca320d0" loc="83:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0e9ca320d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b0e9ca32420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b0e9ca2a648" loc="79:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b0e9ca2a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b0e9ca2a998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b0e9ca34a80" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b0e9ca34a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b0e9ca34dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b0e9cb6fc08" loc="44:BlinkRavenC.nc">
      <component-ref qname="BlinkRavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b0e9cb6fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9cb6de78"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cb655a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9cb6d2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9cb65e48"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9cb6c748"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9cb6c2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9cb659f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9cb667e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9cb6d8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9cb66c88"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cb65158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b0e9cb71d90" loc="48:BlinkRavenC.nc">
      <component-ref qname="BlinkRavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0e9cb71d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0e9cb82170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2b0e9cb6cd60" loc="45:BlinkRavenC.nc">
      <component-ref qname="BlinkRavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2b0e9cb6cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9cb79088"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cb696c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9cb68470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9cb68020"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9cb79928"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9cb794d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9cb69b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9cb6a8f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9cb68a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9cb6ad90"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cb69278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="waitforeui" ref="0x2b0e9cb897c8" loc="54:BlinkRavenC.nc">
      <component-ref qname="BlinkRavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="waitforeui" scoped="" ref="0x2b0e9cb897c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0e9cb89b18"/>
        <function-ref name="runTask" scoped="" ref="0x2b0e9cb89ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0e9cb8b760" loc="47:BlinkRavenC.nc">
      <component-ref qname="BlinkRavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0e9cb8b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0e9cb8bab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0e9cb8bc38"/>
        <function-ref name="led1On" scoped="" ref="0x2b0e9cb8bdc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0e9cb71020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0e9cb711a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cb71330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0e9cb714b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0e9cb71ad8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cb71640"/>
        <function-ref name="led0On" scoped="" ref="0x2b0e9cb717c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b0e9cb71950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Eui64" ref="0x2b0e9cba7758" loc="50:BlinkRavenC.nc">
      <component-ref qname="BlinkRavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Eui64" scoped="" ref="0x2b0e9cba7758"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b0e9cba7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2b0e9cb77020" loc="46:BlinkRavenC.nc">
      <component-ref qname="BlinkRavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2b0e9cb77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9cb732b8"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cb76978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9cb756c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9cb75278"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9cb73b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9cb73708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9cb76dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9cb77b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9cb75c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9cb76088"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cb76528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Raven" ref="0x2b0e9cba9d68" loc="49:BlinkRavenC.nc">
      <component-ref qname="BlinkRavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Raven" scoped="" ref="0x2b0e9cba9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Raven"/>
      </instance>
      <interface-functions>
        <function-ref name="temperature" scoped="" ref="0x2b0e9cb8a0f0"/>
        <function-ref name="battery" scoped="" ref="0x2b0e9cb8a278"/>
        <function-ref name="msg" scoped="" ref="0x2b0e9cb8a400"/>
        <function-ref name="hex" scoped="" ref="0x2b0e9cb8a588"/>
        <function-ref name="cmd" scoped="" ref="0x2b0e9cb8a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b0e9cbbd8f8" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0e9cbbd8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0e9cbbdc48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0e9cbbddd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b0e9cbba020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0e9cbba1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0e9cbba330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cbba4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0e9cbba640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0e9cbbac60"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cbba7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0e9cbba950"/>
        <function-ref name="led2On" scoped="" ref="0x2b0e9cbbaad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b0e9cbb5850" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b0e9cbb5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cbb5ba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cbb5d28"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cbb4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cbb41a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cbb4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cbb44b8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cbb4640"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cbb47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9cbb9b08" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9cbb9b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cbb9e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b0e9cbb4ae0" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b0e9cbb4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cbb4e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cbc7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cbc71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cbc7330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cbc74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cbc7640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cbc77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cbc7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b0e9cbb6110" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0e9cbb6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0e9cbb6460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0e9cbb65e8"/>
        <function-ref name="led1On" scoped="" ref="0x2b0e9cbb6770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0e9cbb68f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0e9cbb6a80"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cbb6c08"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0e9cbb6d90"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0e9cbb54b8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cbb5020"/>
        <function-ref name="led0On" scoped="" ref="0x2b0e9cbb51a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b0e9cbb5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b0e9cbc7c68" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b0e9cbc7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cbc6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cbc61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cbc6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cbc64b8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cbc6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cbc67c8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cbc6950"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cbc6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b0e9cbd2060" loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b0e9cbd2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cbd23b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cbd2538"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cbd26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cbd2848"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cbd29d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cbd2b58"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cbd2ce0"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cbd2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b0e9cbe51f0" loc="43:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b0e9cbe51f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cbe5540"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cbe56c8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cbe5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cbe59d8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cbe5b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cbe5ce8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cbe5e70"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cbe4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b0e9cbe3460" loc="45:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9cbe3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cbe37b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b0e9cbe4378" loc="44:/opt/tinyos-2.1.1/tos/platforms/raven/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b0e9cbe4378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9cbe46c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9cbe4850"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9cbe49d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9cbe4b60"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cbe4ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9cbe4e70"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cbe3020"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9cbe31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Raven" ref="0x2b0e9cbdc570" loc="43:/opt/tinyos-2.1.1/tos/platforms/raven/RavenC.nc">
      <component-ref qname="RavenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Raven" scoped="" ref="0x2b0e9cbdc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Raven"/>
      </instance>
      <interface-functions>
        <function-ref name="temperature" scoped="" ref="0x2b0e9cbdc8c0"/>
        <function-ref name="battery" scoped="" ref="0x2b0e9cbdca48"/>
        <function-ref name="msg" scoped="" ref="0x2b0e9cbdcbd0"/>
        <function-ref name="hex" scoped="" ref="0x2b0e9cbdcd58"/>
        <function-ref name="cmd" scoped="" ref="0x2b0e9cbef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b0e9cbebd08" loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/RavenP.nc">
      <component-ref qname="RavenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9cbebd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cbea0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b0e9cbf3c98" loc="44:/opt/tinyos-2.1.1/tos/platforms/raven/RavenP.nc">
      <component-ref qname="RavenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0e9cbf3c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0e9cbe9020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0e9cbe91a8"/>
        <function-ref name="receive" scoped="" ref="0x2b0e9cbe9330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0e9cbe94b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0e9cbe9640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0e9cbe97c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0e9cbe9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="received" ref="0x2b0e9cc14020" loc="128:/opt/tinyos-2.1.1/tos/platforms/raven/RavenP.nc">
      <component-ref qname="RavenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="received" scoped="" ref="0x2b0e9cc14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0e9cc14370"/>
        <function-ref name="runTask" scoped="" ref="0x2b0e9cc144f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartCtl" ref="0x2b0e9cbf04e0" loc="45:/opt/tinyos-2.1.1/tos/platforms/raven/RavenP.nc">
      <component-ref qname="RavenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartCtl" scoped="" ref="0x2b0e9cbf04e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9cbf0830"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cbf09b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Raven" ref="0x2b0e9cbeb020" loc="41:/opt/tinyos-2.1.1/tos/platforms/raven/RavenP.nc">
      <component-ref qname="RavenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Raven" scoped="" ref="0x2b0e9cbeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Raven"/>
      </instance>
      <interface-functions>
        <function-ref name="temperature" scoped="" ref="0x2b0e9cbeb370"/>
        <function-ref name="battery" scoped="" ref="0x2b0e9cbeb4f8"/>
        <function-ref name="msg" scoped="" ref="0x2b0e9cbeb680"/>
        <function-ref name="hex" scoped="" ref="0x2b0e9cbeb808"/>
        <function-ref name="cmd" scoped="" ref="0x2b0e9cbeb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b0e9cc4e978" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b0e9cc4e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0e9cc4ecc8"/>
        <function-ref name="receive" scoped="" ref="0x2b0e9cc4ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b0e9cc3c188" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0e9cc3c188"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0e9cc3c4d8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0e9cc3c660"/>
        <function-ref name="receive" scoped="" ref="0x2b0e9cc3c7e8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0e9cc3c970"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0e9cc3caf8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0e9cc3cc80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0e9cc3ce08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0e9cc4d188" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0e9cc4d188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d2190"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0e9c9d24e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0e9cc4c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0e9cc4c930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0e9cc4c4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9cc4cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b0e9cbede70" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b0e9cbede70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9cc3d1e8"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cc3d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b0e9cc89430" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b0e9cc89430"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0e9cc89780"/>
        <function-ref name="receive" scoped="" ref="0x2b0e9cc89908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b0e9cc88c18" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b0e9cc88c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9cc87020"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cc871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9cc46610" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9cc46610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cc46960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b0e9cc89b90" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0e9cc89b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0e9cc88020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0e9cc881a8"/>
        <function-ref name="receive" scoped="" ref="0x2b0e9cc88330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0e9cc884b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0e9cc88640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0e9cc887c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0e9cc88950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0e9cc9c2d0" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0e9cc9c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d2190"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0e9c9d24e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0e9cc9b088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0e9cc9b998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0e9cc9b510"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9cc9be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b0e9cc87c10" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b0e9cc87c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0e9cc9d020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0e9cc9d1a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0e9cc9d330"/>
        <function-ref name="txDone" scoped="" ref="0x2b0e9cc9d4b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0e9cc9d640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0e9cc9d7c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0e9cc9d950"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0e9cc9dad8"/>
        <function-ref name="tx" scoped="" ref="0x2b0e9cc9dc60"/>
        <function-ref name="rx" scoped="" ref="0x2b0e9cc9dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b0e9cc46be8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b0e9cc46be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9cc89020"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cc891a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b0e9cc87470" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b0e9cc87470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9cc877c0"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cc87948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b0e9ccad158" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b0e9ccad158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0e9ccad4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0e9ccad630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0e9ccad7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b0e9ccad940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0e9ccadac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0e9ccadc50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0e9ccaddd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0e9ccac020"/>
        <function-ref name="tx" scoped="" ref="0x2b0e9ccac1a8"/>
        <function-ref name="rx" scoped="" ref="0x2b0e9ccac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b0e9ccab860" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b0e9ccab860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0e9ccabbb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0e9ccabd38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0e9ccaa020"/>
        <function-ref name="txDone" scoped="" ref="0x2b0e9ccaa1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0e9ccaa330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0e9ccaa4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0e9ccaa640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0e9ccaa7c8"/>
        <function-ref name="tx" scoped="" ref="0x2b0e9ccaa950"/>
        <function-ref name="rx" scoped="" ref="0x2b0e9ccaaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b0e9ccae8b8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0e9ccae8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9ccaec08"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ccaed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b0e9ccac6b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b0e9ccac6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9ccaca00"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ccacb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b0e9ccab020" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b0e9ccab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9ccab370"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ccab4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b0e9ccae060" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0e9ccae060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9ccae3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ccae538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b0e9ccc17f8" loc="115:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b0e9ccc17f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ccc1b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b0e9ccbd158" loc="118:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b0e9ccbd158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0e9ccbd4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0e9ccbd630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0e9ccbd7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b0e9ccbd940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0e9ccbdac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0e9ccbdc50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0e9ccbddd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0e9ccbc020"/>
        <function-ref name="tx" scoped="" ref="0x2b0e9ccbc1a8"/>
        <function-ref name="rx" scoped="" ref="0x2b0e9ccbc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b0e9ccbc688" loc="120:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b0e9ccbc688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ccbc9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b0e9ccba020" loc="123:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b0e9ccba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0e9ccba370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0e9ccba4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0e9ccba680"/>
        <function-ref name="txDone" scoped="" ref="0x2b0e9ccba808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0e9ccba990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0e9ccbab18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0e9ccbaca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0e9ccbae28"/>
        <function-ref name="tx" scoped="" ref="0x2b0e9ccb9020"/>
        <function-ref name="rx" scoped="" ref="0x2b0e9ccb91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b0e9ccbe8b8" loc="117:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0e9ccbe8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9ccbec08"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ccbed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b0e9ccbcd98" loc="121:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b0e9ccbcd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9ccbb170"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ccbb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b0e9ccbb6b8" loc="122:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b0e9ccbb6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9ccbba08"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ccbbb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b0e9ccb94c8" loc="125:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0e9ccb94c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0e9ccb9818"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0e9ccb99a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0e9ccb9b28"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0e9ccb9cb0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0e9ccb9e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b0e9ccb81a8" loc="126:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b0e9ccb81a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b0e9ccb84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b0e9ccbe020" loc="116:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0e9ccbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9ccbe370"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ccbe4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0e9cd1ea60" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkRavenAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0e9cd1ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9cedad60"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cedb470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9ceda1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9cedbd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9ced9648"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9ced91f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9cedb8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9cedc620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9ceda790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9cedcac0"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cedb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b0e9cd30b18" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b0e9cd30b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9cd2cd98"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cd2d4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9cd2c1f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9cd2dd78"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9cd2b688"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9cd2b238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9cd2d928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9cd2e6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9cd2c7c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9cd2eb90"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cd2d088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b0e9cd261c8" loc="45:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b0e9cd261c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9cd3c5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cd25af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9cd3d8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9cd3d470"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9cd3b020"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9cd3ca40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9cd3d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9cd26d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9cd3c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9cd25200"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cd256a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0e9cd37980" loc="46:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0e9cd37980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0e9cd39560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9cd294a8" loc="44:/opt/tinyos-2.1.1/tos/platforms/raven/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9cd294a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cd297f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b0e9cd44c80" loc="28:/opt/tinyos-2.1.1/tos/platforms/raven/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b0e9cd44c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0e9cd42a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0e9cd414a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0e9cd41020"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9cd41930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9cd38e70" loc="26:/opt/tinyos-2.1.1/tos/platforms/raven/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9cd38e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cd341e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b0e9cd46838" loc="27:/opt/tinyos-2.1.1/tos/platforms/raven/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0e9cd46838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9cd44020"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cd45020"/>
        <function-ref name="startAt" scoped="" ref="0x2b0e9cd45930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9cd454a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0e9cd444a8"/>
        <function-ref name="start" scoped="" ref="0x2b0e9cd325e0"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cd32ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0e9ce408f0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0e9ce408f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9ce3c020"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9ce3e020"/>
        <function-ref name="startAt" scoped="" ref="0x2b0e9ce3e930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9ce3e4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0e9ce3c4a8"/>
        <function-ref name="start" scoped="" ref="0x2b0e9ce3f698"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ce3fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9ce40148" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9ce40148"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b0e9c93c7c8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b0e9c93c7c8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9ce40498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0e9ce3ca90" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0e9ce3ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0e9ce3b828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0e9ce3a190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0e9ce3bcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9ce3a618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b0e9d2b4b60" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0e9d2b4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0e9d2b3020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0e9d2b31a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0e9d2b3330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0e9d2b34b8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0e9d2b3640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0e9d2b37c8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0e9d2b3950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0e9d2b3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0e9d2c0888" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0e9d2c0888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9d2bc020"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9d2bd020"/>
        <function-ref name="startAt" scoped="" ref="0x2b0e9d2bd930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9d2bd4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0e9d2bc4a8"/>
        <function-ref name="start" scoped="" ref="0x2b0e9d2bf660"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9d2bfb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9d2c00e0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9d2c00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9d2c0430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0e9d2bca90" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0e9d2bca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0e9d2bb828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0e9d2ba190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0e9d2bbcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9d2ba618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b0e9d2e0060" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0e9d2e0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0e9d2e03b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0e9d2e0538"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0e9d2e06c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0e9d2e0848"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0e9d2e09d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0e9d2e0b58"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0e9d2e0ce0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0e9d2e0e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b0e9d2b3e68" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0e9d2b3e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0e9d2b0798"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9d2b14f8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d2b2a18"/>
        <function-ref name="reset" scoped="" ref="0x2b0e9d2b1980"/>
        <function-ref name="isOn" scoped="" ref="0x2b0e9d2b0c20"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d2b1020"/>
        <function-ref name="start" scoped="" ref="0x2b0e9d2b1e08"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9d2b0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0e9d2bab98" loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0e9d2bab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0e9d2b6db8"/>
        <function-ref name="test" scoped="" ref="0x2b0e9d2b64a8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d2b8760"/>
        <function-ref name="setScale" scoped="" ref="0x2b0e9d2b4270"/>
        <function-ref name="getScale" scoped="" ref="0x2b0e9d2b4748"/>
        <function-ref name="reset" scoped="" ref="0x2b0e9d2b7580"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9d2b70f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0e9d2b6930"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d2b8be8"/>
        <function-ref name="start" scoped="" ref="0x2b0e9d2b7a08"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9d2b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0e9cdc6220" loc="83:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <component-ref qname="HplAtm1284Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0e9cdc6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0e9cdc6570"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0e9cdc66f8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0e9cdc6880"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0e9cdc6a08"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0e9cdc6b90"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0e9cdc6d18"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0e9cdc5020"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0e9cdc51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b0e9cdde850" loc="85:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <component-ref qname="HplAtm1284Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0e9cdde850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0e9cddeba0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0e9cdded28"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0e9cddc020"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0e9cddc1a8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0e9cddc330"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0e9cddc4b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0e9cddc640"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0e9cddc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0e9cdc5670" loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <component-ref qname="HplAtm1284Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0e9cdc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0e9cddfe20"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cdc4b80"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cdc4220"/>
        <function-ref name="reset" scoped="" ref="0x2b0e9cddf088"/>
        <function-ref name="isOn" scoped="" ref="0x2b0e9cdde310"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cdc46a8"/>
        <function-ref name="start" scoped="" ref="0x2b0e9cddf510"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cddf998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0e9cdcc248" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <component-ref qname="HplAtm1284Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0e9cdcc248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0e9cdc8310"/>
        <function-ref name="test" scoped="" ref="0x2b0e9cdc99d0"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cdccdc8"/>
        <function-ref name="setScale" scoped="" ref="0x2b0e9cdc8798"/>
        <function-ref name="getScale" scoped="" ref="0x2b0e9cdc8c70"/>
        <function-ref name="reset" scoped="" ref="0x2b0e9cdcac10"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9cdca788"/>
        <function-ref name="isOn" scoped="" ref="0x2b0e9cdc9e58"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cdca2b0"/>
        <function-ref name="start" scoped="" ref="0x2b0e9cdc90c0"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cdc9548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0e9cdd4b08" loc="85:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0e9cdd4b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0e9cdd4e58"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0e9cdd3020"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0e9cdd31a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0e9cdd3330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0e9cdd34b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0e9cdd3640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0e9cdd37c8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0e9cdd3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b0e9cdea0c0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0e9cdea0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b0e9cdea410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b0e9cdea7c0" loc="88:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0e9cdea7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0e9cdeab10"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0e9cdeac98"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0e9cdeae20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0e9cde9020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0e9cde91a8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0e9cde9330"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0e9cde94b8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0e9cde9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0e9cdd3e18" loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0e9cdd3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0e9cdec798"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9cded4f8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cdd2a18"/>
        <function-ref name="reset" scoped="" ref="0x2b0e9cded980"/>
        <function-ref name="isOn" scoped="" ref="0x2b0e9cdecc20"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cded020"/>
        <function-ref name="start" scoped="" ref="0x2b0e9cdede08"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cdec310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0e9cddbb60" loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0e9cddbb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0e9cdd6c20"/>
        <function-ref name="test" scoped="" ref="0x2b0e9cdd6310"/>
        <function-ref name="get" scoped="" ref="0x2b0e9cdd8728"/>
        <function-ref name="setScale" scoped="" ref="0x2b0e9cdd40f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b0e9cdd45d0"/>
        <function-ref name="reset" scoped="" ref="0x2b0e9cdd7548"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9cdd70c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0e9cdd6798"/>
        <function-ref name="set" scoped="" ref="0x2b0e9cdd8bb0"/>
        <function-ref name="start" scoped="" ref="0x2b0e9cdd79d0"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cdd7e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b0e9ce64cf0" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b0e9ce64cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0e9ce810a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0e9ce81228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b0e9ce68c70" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0e9ce68c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9ce64410"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9ce664a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0e9ce66db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9ce66930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0e9ce64898"/>
        <function-ref name="start" scoped="" ref="0x2b0e9ce679f0"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ce66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0e9ce6dab0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0e9ce6dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9ce69d60"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9ce6b470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9ce691c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9ce6bd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9ce68648"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9ce681f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9ce6b8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9ce6c620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9ce69790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9ce6cac0"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ce6b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b0e9ceb1930" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b0e9ceb1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0e9ceb1c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b0e9ceb1e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b0e9ceb6858" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b0e9ceb6858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9ceb2bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9ceb31c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9ceb2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9ceb3a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9ceb14d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9ceb1088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9ceb3610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9ceb53d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9ceb25f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9ceb5878"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ceb5d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0e9cebc5e0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0e9cebc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9ceb8988"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9ceb9020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9ceb9d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9ceb9900"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9ceb62d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9ceb8df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9ceb9490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9cebb198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9ceb8398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9cebb658"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cebbb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0e9cecd128" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0e9cecd128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0e9cecdca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0e9cec4330" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0e9cec4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0e9cec20c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0e9cec29d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0e9cec2548"/>
        <function-ref name="overflow" scoped="" ref="0x2b0e9cec2e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0e9ced6020" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkRavenAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0e9ced6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9ced32b8"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9ced5978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9ced46c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9ced4278"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9ced3b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9ced3708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9ced5dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9ced6b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9ced4c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9ced5088"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ced5528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0e9cef0550" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkRavenAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0e9cef0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0e9c9d4268"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0e9c9d45c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0e9ceed768"/>
        <function-ref name="fired" scoped="" ref="0x2b0e9ceefe50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0e9ceeeb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0e9ceee728"/>
        <function-ref name="getdt" scoped="" ref="0x2b0e9ceeb088"/>
        <function-ref name="gett0" scoped="" ref="0x2b0e9ceedbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0e9ceee2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0e9ceef0c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0e9ceed198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0e9ceef560"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9ceefa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b0e9ceea4a8" loc="37:/opt/tinyos-2.1.1/tos/platforms/raven/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b0e9ceea4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b0e9ceea7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b0e9cee7378" loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/RavenIeeeEui64P.nc">
      <component-ref qname="RavenIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b0e9cee7378"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b0e9cee76c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b0e9cee7a40" loc="43:/opt/tinyos-2.1.1/tos/platforms/raven/RavenIeeeEui64P.nc">
      <component-ref qname="RavenIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0e9cee7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9cee7d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b0e9cee4080" loc="45:/opt/tinyos-2.1.1/tos/platforms/raven/RavenIeeeEui64P.nc">
      <component-ref qname="RavenIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0e9cee4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0e9cee43d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b0e9cf0ed98" loc="47:/opt/tinyos-2.1.1/tos/platforms/raven/RavenIeeeEui64P.nc">
      <component-ref qname="RavenIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0e9cf0ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9cef3170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0e9cef32f8"/>
        <function-ref name="request" scoped="" ref="0x2b0e9cef3480"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9cef3608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9cef3790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b0e9cef6280" loc="46:/opt/tinyos-2.1.1/tos/platforms/raven/RavenIeeeEui64P.nc">
      <component-ref qname="RavenIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9cef6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b0e9cee1100"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b0e9cee13a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0e9cef6e00"/>
        <function-ref name="writeDone" scoped="" ref="0x2b0e9cef4130"/>
        <function-ref name="write" scoped="" ref="0x2b0e9cee29c8"/>
        <function-ref name="readDone" scoped="" ref="0x2b0e9cef5588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0e9cf1d1d0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="LocalIeeeEui64C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0e9cf1d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9cf1d520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0e9cf1d6a8"/>
        <function-ref name="request" scoped="" ref="0x2b0e9cf1d830"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9cf1d9b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9cf1db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b0e9d0b8020" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="LocalIeeeEui64C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9d0b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b0e9cee1100"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b0e9cee13a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0e9d0b8ba0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b0e9d0b5020"/>
        <function-ref name="write" scoped="" ref="0x2b0e9d0b7790"/>
        <function-ref name="readDone" scoped="" ref="0x2b0e9d0b6388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0e9cf32538" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0e9cf32538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9cf32888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0e9cf32a10"/>
        <function-ref name="request" scoped="" ref="0x2b0e9cf32b98"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9cf32d20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9cf31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b0e9cf319b0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9cf319b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b0e9cee1100"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b0e9cee13a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0e9cf30560"/>
        <function-ref name="writeDone" scoped="" ref="0x2b0e9cf2d8b0"/>
        <function-ref name="write" scoped="" ref="0x2b0e9cf2f130"/>
        <function-ref name="readDone" scoped="" ref="0x2b0e9cf2fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0e9cfa3698" loc="82:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0e9cfa3698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0e9cfa3a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0e9cfa3b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0e9cfa13c8" loc="86:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0e9cfa13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0e9cfa1738"/>
        <function-ref name="configure" scoped="" ref="0x2b0e9cfa18c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b0e9cfa3dd8" loc="83:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0e9cfa3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9cfa2170"/>
        <function-ref name="requested" scoped="" ref="0x2b0e9cfa22f8"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9cfa2480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9cfa2608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0e9cfa2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0e9cfa4838" loc="81:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0e9cfa4838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9cfa4ba8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0e9cfa4d30"/>
        <function-ref name="request" scoped="" ref="0x2b0e9cfa3020"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9cfa31a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9cfa3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0e9cfa29d8" loc="84:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0e9cfa29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0e9cfa2d28"/>
        <function-ref name="userId" scoped="" ref="0x2b0e9cfa1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9d3376e0" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9d3376e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9d337a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b0e9d337cb8" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b0e9d337cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0e9d3350a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0e9d335228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0e9d3353b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0e9d335538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0e9d333af8" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0e9d333af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0e9d333e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0e9d332020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0e9d3316f8" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0e9d3316f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0e9d331a68"/>
        <function-ref name="configure" scoped="" ref="0x2b0e9d331bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b0e9d331e78" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b0e9d331e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0e9d3301f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0e9d330380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0e9d330508"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0e9d330690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b0e9d332268" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0e9d332268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9d3325b8"/>
        <function-ref name="requested" scoped="" ref="0x2b0e9d332740"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9d3328c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9d332a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0e9d332bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0e9d3308d8" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0e9d3308d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0e9d330c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0e9d330db0"/>
        <function-ref name="led1On" scoped="" ref="0x2b0e9d32f020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0e9d32f1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0e9d32f330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d32f4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0e9d32f640"/>
        <function-ref name="led0On" scoped="" ref="0x2b0e9d32fc60"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d32f950"/>
        <function-ref name="led2On" scoped="" ref="0x2b0e9d32f7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0e9d32fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0e9d334d80" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0e9d334d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9d333170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0e9d3332f8"/>
        <function-ref name="request" scoped="" ref="0x2b0e9d333480"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9d333608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9d333790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0e9d332e20" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0e9d332e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0e9d3311a8"/>
        <function-ref name="userId" scoped="" ref="0x2b0e9d331330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b0e9d32e020" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b0e9d32e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0e9d32e370"/>
        <function-ref name="runTask" scoped="" ref="0x2b0e9d32e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b0e9cf9e820" loc="52:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b0e9cf9e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b0e9cf9eb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b0e9cf9edb8" loc="53:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0e9cf9edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9cfb3170"/>
        <function-ref name="requested" scoped="" ref="0x2b0e9cfb32f8"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9cfb3480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9cfb3608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0e9cfb3790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b0e9cf9e100" loc="50:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0e9cf9e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9cf9e450"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9cf9e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b0e9cfb39d8" loc="54:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0e9cfb39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0e9cfb3d28"/>
        <function-ref name="userId" scoped="" ref="0x2b0e9cfb2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x2b0e9d002318" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b0e9d002318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b0e9d002668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0e9cfe3888" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0e9cfe3888"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b0e9cee1100"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b0e9cee13a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0e9cfe2490"/>
        <function-ref name="writeDone" scoped="" ref="0x2b0e9d0047c8"/>
        <function-ref name="write" scoped="" ref="0x2b0e9d005088"/>
        <function-ref name="readDone" scoped="" ref="0x2b0e9d005c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0e9cfaf020" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0e9cfaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9cfaf390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0e9cfaf518"/>
        <function-ref name="request" scoped="" ref="0x2b0e9cfaf6a0"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9cfaf828"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9cfaf9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b0e9cfafe60" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9cfafe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b0e9cee1100"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b0e9cee13a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0e9cfe8a28"/>
        <function-ref name="writeDone" scoped="" ref="0x2b0e9cfe6dc8"/>
        <function-ref name="write" scoped="" ref="0x2b0e9cfe7608"/>
        <function-ref name="readDone" scoped="" ref="0x2b0e9cfe6228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b0e9cfe4a78" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b0e9cfe4a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0e9cfe4de8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0e9cfe3020"/>
        <function-ref name="request" scoped="" ref="0x2b0e9cfe31a8"/>
        <function-ref name="granted" scoped="" ref="0x2b0e9cfe3330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0e9cfe34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x2b0e9d059318" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b0e9d059318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b0e9d059668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x2b0e9d059930" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b0e9d059930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b0e9d059c80"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b0e9d059e08"/>
        <function-ref name="setStart" scoped="" ref="0x2b0e9d057020"/>
        <function-ref name="status" scoped="" ref="0x2b0e9d0571a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b0e9d057330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b0e9d0574b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b0e9d057640"/>
        <function-ref name="read" scoped="" ref="0x2b0e9d0577c8"/>
        <function-ref name="init" scoped="" ref="0x2b0e9d057950"/>
        <function-ref name="enableAck" scoped="" ref="0x2b0e9d057ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b0e9d057c60"/>
        <function-ref name="hasStart" scoped="" ref="0x2b0e9d057de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b0e9d056020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b0e9d0562a8"/>
        <function-ref name="enable" scoped="" ref="0x2b0e9d056430"/>
        <function-ref name="write" scoped="" ref="0x2b0e9d0565b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b0e9d056740"/>
        <function-ref name="off" scoped="" ref="0x2b0e9d0568c8"/>
        <function-ref name="setStop" scoped="" ref="0x2b0e9d056a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b0e9d056bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b0e9d056d60"/>
        <function-ref name="hasStop" scoped="" ref="0x2b0e9d055020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x2b0e9d0552e8" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b0e9d0552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0e9d055638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0e9d0557c0"/>
        <function-ref name="led1On" scoped="" ref="0x2b0e9d055948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0e9d055ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0e9d055c58"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d055de0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0e9d054020"/>
        <function-ref name="led2On" scoped="" ref="0x2b0e9d054640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d054330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0e9d0541a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0e9d0544b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x2b0e9d054908" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b0e9d054908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0e9d054c58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0e9d054de0"/>
        <function-ref name="led1On" scoped="" ref="0x2b0e9d053020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0e9d0531a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0e9d053330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d0534b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0e9d053640"/>
        <function-ref name="led2On" scoped="" ref="0x2b0e9d053c60"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d053950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0e9d0537c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0e9d053ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b0e9cfffe60" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0e9cfffe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0e9d05d1e8"/>
        <function-ref name="stop" scoped="" ref="0x2b0e9d05d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b0e9d05d700" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b0e9d05d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b0e9cee1100"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b0e9cee13a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0e9d05c3a8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b0e9d05a790"/>
        <function-ref name="write" scoped="" ref="0x2b0e9d05b020"/>
        <function-ref name="readDone" scoped="" ref="0x2b0e9d05bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b0e9d0767d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b0e9d0767d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b0e9d076b20"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b0e9d076ca8"/>
        <function-ref name="setStart" scoped="" ref="0x2b0e9d076e30"/>
        <function-ref name="status" scoped="" ref="0x2b0e9d073020"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b0e9d0731a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b0e9d073330"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b0e9d0734b8"/>
        <function-ref name="read" scoped="" ref="0x2b0e9d073640"/>
        <function-ref name="init" scoped="" ref="0x2b0e9d0737c8"/>
        <function-ref name="enableAck" scoped="" ref="0x2b0e9d073950"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b0e9d073ad8"/>
        <function-ref name="hasStart" scoped="" ref="0x2b0e9d073c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b0e9d073de8"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b0e9d072120"/>
        <function-ref name="enable" scoped="" ref="0x2b0e9d0722a8"/>
        <function-ref name="write" scoped="" ref="0x2b0e9d072430"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b0e9d0725b8"/>
        <function-ref name="off" scoped="" ref="0x2b0e9d072740"/>
        <function-ref name="setStop" scoped="" ref="0x2b0e9d0728c8"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b0e9d072a50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b0e9d072bd8"/>
        <function-ref name="hasStop" scoped="" ref="0x2b0e9d072d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b0e9d06e020" loc="48:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b0e9d06e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b0e9d06e370"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b0e9d06e4f8"/>
        <function-ref name="setStart" scoped="" ref="0x2b0e9d06e680"/>
        <function-ref name="status" scoped="" ref="0x2b0e9d06e808"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b0e9d06e990"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b0e9d06eb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b0e9d06eca0"/>
        <function-ref name="read" scoped="" ref="0x2b0e9d06ee28"/>
        <function-ref name="init" scoped="" ref="0x2b0e9d06d020"/>
        <function-ref name="enableAck" scoped="" ref="0x2b0e9d06d1a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b0e9d06d330"/>
        <function-ref name="hasStart" scoped="" ref="0x2b0e9d06d4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b0e9d06d640"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b0e9d06d8c8"/>
        <function-ref name="enable" scoped="" ref="0x2b0e9d06da50"/>
        <function-ref name="write" scoped="" ref="0x2b0e9d06dbd8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b0e9d06dd60"/>
        <function-ref name="off" scoped="" ref="0x2b0e9d06c020"/>
        <function-ref name="setStop" scoped="" ref="0x2b0e9d06c1a8"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b0e9d06c330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b0e9d06c4b8"/>
        <function-ref name="hasStop" scoped="" ref="0x2b0e9d06c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x2b0e9d06c9c8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x2b0e9d06c9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d06cd18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d06b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d06b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d06b330"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d06b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d06b640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d06b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d06b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x2b0e9d06bc80" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x2b0e9d06bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0e9d06a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0e9d06a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0e9d06a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0e9d06a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d06a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0e9d06a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d06a950"/>
        <function-ref name="clr" scoped="" ref="0x2b0e9d06aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0e9d0abd08" loc="35:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0e9d0abd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0e9d0a80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b0e9d0a8358" loc="36:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0e9d0a8358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0e9d0a86a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0e9d0a8830"/>
        <function-ref name="led1On" scoped="" ref="0x2b0e9d0a89b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0e9d0a8b40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0e9d0a8cc8"/>
        <function-ref name="get" scoped="" ref="0x2b0e9d0a8e50"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0e9d0a7020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0e9d0a7640"/>
        <function-ref name="set" scoped="" ref="0x2b0e9d0a71a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0e9d0a7330"/>
        <function-ref name="led2On" scoped="" ref="0x2b0e9d0a74b8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0e9ca4f8a8" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b0e9ca4d580" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b0e9ca52810" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b0e9ca525a0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b0e9ca54020" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b0e9ca54a18" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0e9ca547a8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b0e9ca534d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0e9ca53260" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b0e9ca53d18" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b0e9ca6b4e8" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b0e9ca6bbb0" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b0e9ca6c768" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b0e9ca6a968" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0e9ca6ce08" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b0e9ca6a290" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0e9ca629e0" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b0e9ca6c0d8" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0e9c937bb0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b0e9c95cac8" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b0e9c95c328" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b0e9c95e608" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b0e9c95edf8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b0e9ca0b450" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/raven/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b0e9ca28bd0" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b0e9c9aa1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b0e9ca346d8" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0e9cb67cc8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0e9cb67cc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0e9cb70760" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0e9cb62110" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b0e9cb60d40" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0e9cb607a8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0e9cb60ac0" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b0e9cb60070" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b0e9cb6f6b0" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b0e9cb70e80" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0e9cb62888" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b0e9cb64820" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0e9cb645b0" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b0e9cb5fd28" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0e9cb5f790" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0e9cb5faa8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b0e9cb63290" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0e9cb63020" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0e9cb63a38" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b0e9cb7fa40" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b0e9cb7e1d8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b0e9cb7e948" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b0e9cb7d810" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b0e9cb7be70" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0e9cb7a630" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b0e9cb7d0d8" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0e9cb8b290" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b0e9cb8b020" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b0e9cb7f328" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b0e9cb7b020" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b0e9cb7b738" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="32:/opt/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b0e9cba73a0" loc="37:/opt/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b0e9cba83d0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b0e9cba8af8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Raven" loc="53:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
      <function event="" provided="0" name="temperature" ref="0x2b0e9cba9850" loc="95:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
          <short>&#10; Signal answer to SIPC_CMD_ID_READ_TEMPERATURE&#10; &#10; </short>
          <long>&#10; Signal answer to SIPC_CMD_ID_READ_TEMPERATURE&#10; &#10; @param 'int16_t celsius' - tempeature in celsius (-15 to 60 degree)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Raven"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x2b0e9c13d658"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="celsius" ref="0x2b0e9cba95e0" loc="95:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x2b0e9c13d658"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="battery" ref="0x2b0e9cb97c70" loc="88:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
          <short>&#10; Signal answer to SIPC_CMD_ID_READ_BATTERY&#10; &#10; </short>
          <long>&#10; Signal answer to SIPC_CMD_ID_READ_BATTERY&#10; &#10; @param 'uint16_t voltage' - battery voltage (in mV)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Raven"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="voltage" ref="0x2b0e9cb97a00" loc="88:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msg" ref="0x2b0e9cb9ae50" loc="71:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
          <short>&#10; Message to LCD&#10; &#10; </short>
          <long>&#10; Message to LCD&#10; &#10; @param 'const char * msg' - string to display on LCD text area&#10; @return SUCCESS if the command and string was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Raven"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0e9cb9abe0" loc="71:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex" ref="0x2b0e9cb99db0" loc="81:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
          <short>&#10; Hex data to LCD&#10; &#10; </short>
          <long>&#10; Hex data to LCD&#10; &#10; @param 'const uint16_t n' - number to display on LCD hex area&#10; @param 'const uint8_t mask' - bitmask to separate digits (SIPC_HEX*)&#10; @return SUCCESS if the command and number was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Raven"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0e9cb997d8" loc="81:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="mask" ref="0x2b0e9cb99b30" loc="81:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cmd" ref="0x2b0e9cb9a290" loc="62:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
          <short>&#10; Command to coprocessor &#10; &#10; </short>
          <long>&#10; Command to coprocessor &#10; &#10; @param 'uint8_t cmd' - command (SIPC_CMD* &#60; SIPC_CMD_ID_LCD_MAX and SIPC_CMD_ID_READ_* with answer)&#10; @return SUCCESS if the command was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Raven"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b0e9cb9a020" loc="62:/opt/tinyos-2.1.1/tos/platforms/raven/Raven.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0e9cbe72a0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0e9cbeac88" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0e9cbe7020" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b0e9cbf9c28" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b0e9cbf99b8" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b0e9cbf6988" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0e9cbf63e8" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0e9cbf6708" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b0e9cbf8948" loc="65:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b0e9cbf32b0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0e9cbf4898" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0e9cbf4bb8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b0e9cbf3020" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b0e9cbf9258" loc="72:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0e9cbe6a18" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0e9cbe6140" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0e9cbe6460" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b0e9cbe6788" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b0e9cbf17d0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0e9cbf0020" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0e9cc3a290" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b0e9cc3a020" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b0e9cc4e0b8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b0e9cc3aa80" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b0e9cc3adb8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0e9cc3b910" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0e9cc3b910"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0e9cc3bb40" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cc3bb40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0e9cc4b400" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cc3bb40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b0e9cc4a468" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b0e9cc4bc18" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0e9cc4ab58" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b0e9cc52020" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b0e9cc531d8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b0e9cc65670" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0e9cc65400" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b0e9cc506b0" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b0e9cc54328" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b0e9cc54a48" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b0e9cc538f8" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b0e9cc52700" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b0e9cc50020" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0e9cc52d48" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b0e9cc50d60" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0e9cd3bbe8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0e9cd3bbe8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0e9cd374c8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0e9c13e608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0e9cd34c88" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0e9cd34c88"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0e9cd31020" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0e9cd47958" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0e9cd49a78" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b0e9cd47020" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0e9cd48a08" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b0e9cd48d28" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0e9cd48258" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b0e9cd46110" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0e9cd31ae0" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0e9cd31870" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd31020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0e9cd49328" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b0e9cd7c290" loc="89:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b0e9cd7e178" loc="85:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b0e9cd66020" loc="79:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b0e9cd7eae8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b0e9cd7e878" loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b0e9cd659d0" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0e9cd65760" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b0e9cd7cc08" loc="90:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b0e9cd7c998" loc="90:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b0e9cd66750" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b0e9cd650a8" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0e9cd66e08" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b0e9cd867f0" loc="92:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b0e9cd89800" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b0e9cd87020" loc="74:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b0e9cd877f0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b0e9cd85020" loc="98:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b0e9cd86020" loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b0e9cd8a650" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0e9c9eab88"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0e9c9e8020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b0e9cd89030" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0e9c9eab88"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0e9c9e8020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0e9cd8ad98" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0e9c9eab88"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0e9c9e8020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b0e9cd686a0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd686a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b0e9cd76e20" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0e9cd780d8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0e9cd79020" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd686a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0e9cd787e0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0e9cd755c0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0e9cd79968" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd686a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0e9cd796f8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0e9cd686a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0e9cd76020" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0e9cd76708" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b0e9cd5d678" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0e9cd5d678"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b0e9cd70cf0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b0e9cd71e20" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0e9cd5a020" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0e9cd5d678"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b0e9cd6f690" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b0e9cd6f420" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b0e9cd6fe10" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0e9cd597f8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0e9cd590d8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0e9cd705c8" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0e9cd5a958" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0e9cd5d678"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0e9cd5a6e8" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0e9cd5d678"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0e9cd71020" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0e9cd71708" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b0e9cf0e020" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b0e9cf10110" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b0e9cef17f0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b0e9cf10898" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b0e9cf0ea08" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x2b0e9cf00770" loc="48:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x2b0e9cf00770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b0e9ceffc78" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b0e9cee1760"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b0e9ceff020" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b0e9cee1760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b0e9ceff350" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b0e9ceff680" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b0e9ceff9d8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b0e9cef8618" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0e9cef7998" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b0e9cef7cc8" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b0e9cef8020" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b0e9cef8378" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b0e9cefcc78" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b0e9cee1760"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b0e9cefc020" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b0e9cee1760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b0e9cefc350" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b0e9cefc680" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b0e9cefc9d8" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b0e9cefaa98" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0e9cefbdf8" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b0e9cefa170" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0e9c13db98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b0e9cefa4a0" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b0e9cefa7f8" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b0e9cf237d0" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b0e9cf220d8" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b0e9cf3b450" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b0e9cf43c38" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b0e9cf42598" loc="56:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b0e9cf40608" loc="73:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b0e9cf25d30" loc="46:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b0e9cf42d98" loc="65:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b0e9cf3f020" loc="81:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b0e9cf24c28" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b0e9cf3d458" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b0e9cf53020" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0e9cf3a398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0e9cf54d68" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0e9cf3a398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b0e9cf331d8" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b0e9cf33c58" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0e9cf3a398"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0e9cf339e8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0e9cf3a398"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b0e9cf54530" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b0e9cf3a398"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b0e9cfbb7f0" loc="52:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b0e9cf9a748" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0e9cfbc020" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0e9c9611a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x2b0e9cfc45c8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x2b0e9cff4110" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x2b0e9cff47d0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x2b0e9d017908" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b0e9d017698" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x2b0e9cff5a00" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x2b0e9d013020" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b0e9d00faa8" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b0e9d013950" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b0e9d0136e0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b0e9d00c258" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b0e9cff8c40" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x2b0e9cff89d0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x2b0e9d014918" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b0e9d0146a8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b0e9d0121d8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x2b0e9d015020" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b0e9d010110" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x2b0e9d017020" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b0e9d00f3c8" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b0e9d00f158" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b0e9d00eb50" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0e9d00e8e0" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0e9c13d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x2b0e9d012978" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b0e9cff5328" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x2b0e9d0158d8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b0e9d015668" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x2b0e9d010ac0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b0e9d010850" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b0e9d00e258" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x2b0e9d014020" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0e9c93ecc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
