<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="56:BlinkIngaAppC.nc">
      <from><interface-ref name="UserButtonGet" scoped="" ref="0x7f8e02ff1428"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f8e02e14578"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f8e02e14578"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f8e02bc6680"/></to>
    </wire>
    <wire loc="57:BlinkIngaAppC.nc">
      <from><interface-ref name="UserButtonNotify" scoped="" ref="0x7f8e02fedb80"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f8e02c356e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f8e02c356e8"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f8e02bc37e8"/></to>
    </wire>
    <wire loc="59:BlinkIngaAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8e03010d90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8e03720940"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/printf/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8e03720940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8e0354e6c0"/></to>
    </wire>
    <wire loc="61:BlinkIngaAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f8e03019578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e02fcda60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7f8e02fcda60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8e02fc44e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:BlinkIngaAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f8e030167d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e02e1c020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7f8e02e1c020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8e02fc44e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:BlinkIngaAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8e03011730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8e03062080"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8e03062080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8e0305e930"/></to>
    </wire>
    <wire loc="64:BlinkIngaAppC.nc">
      <from><interface-ref name="Inga" scoped="" ref="0x7f8e02ff63b0"/></from>
      <to><interface-ref name="Inga" scoped="" ref="0x7f8e03026e80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/inga/IngaC.nc">
      <from><interface-ref name="Inga" scoped="" ref="0x7f8e03026e80"/></from>
      <to><interface-ref name="Inga" scoped="" ref="0x7f8e02fdc418"/></to>
    </wire>
    <wire loc="65:BlinkIngaAppC.nc">
      <from><interface-ref name="Eui64" scoped="" ref="0x7f8e02ff3a50"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8e02e130c0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/platforms/inga/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8e02e130c0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8e02e10020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e02867dc0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/inga/LocalIeeeEui64C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e02e106e8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e02fbfe18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/inga/IngaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e02fdcdf0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f8e032ab020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f8e032a9e30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e0331a120"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e034aab98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8e0354e6c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8e0308c9c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/printf/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f8e0361d020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f8e03805390"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f8e03805390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f8e03760800"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/printf/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f8e0361d9f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e03721d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8e03721d10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e0371bc10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/printf/MainC.nc">
      <from><interface-ref name="MainBoot" scoped="" ref="0x7f8e0354d1f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8e0371e870"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/printf/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e0361c140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/inga/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f8e0371c9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e03196dc0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8e03717b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8e0363c650"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f8e03714a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e0363c020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f8e03714370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e0303cc08"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f8e03714370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f8e0370f140"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f8e0370f140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f8e0370eb00"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f8e0370f7d0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f8e0371c9a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f8e03705cd0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f8e036fc4d0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f8e036fc4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8e03692740"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f8e03709020"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f8e0370f7d0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f8e036e4af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8e03668020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8e03668020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02a52480"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f8e036fa7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8e03690a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8e03690a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b7c480"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f8e036f8af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8e03688bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8e03688bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b283e0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f8e036ecc78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8e03676740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8e03676740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02aba480"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f8e036ff020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8e036952a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8e036952a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b8b480"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f8e036f4020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8e03684020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8e03684020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b1e480"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f8e036e81a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8e03673bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8e03673bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02ab1480"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f8e036e0020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8e03665430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8e03665430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02a48480"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f8e036dd4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8e036628c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8e036628c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02a3f480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8e03692740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b82480"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f8e036f1658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8e03680430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8e03680430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b15480"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f8e036ef968"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8e03679500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8e03679500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02ac13e0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f8e036e3c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8e03667120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8e03667120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02a4e480"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f8e036f9968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8e0368ebd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8e0368ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b79480"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f8e036f7c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8e03687d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8e03687d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b24480"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f8e036ebe00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8e036758c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8e036758c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02ab7480"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f8e036fe1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8e03694430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8e03694430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b88480"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f8e036f31a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8e03682120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8e03682120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b1b480"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f8e036e7348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8e03672d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8e03672d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02aae480"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f8e036df1a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8e036645b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8e036645b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02a45480"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f8e036e5658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8e0366ae40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8e0366ae40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02a553e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f8e036fb658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8e036918c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8e036918c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b7f480"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f8e036f07e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8e0367f5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8e0367f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b12480"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f8e036edaf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f8e036775b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7f8e036775b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02abe480"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f8e036e2e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8e036662a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8e036662a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02a4b480"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f8e0370ddb8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f8e036961e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7f8e036961e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b944e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f8e036f6e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f8e03686e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7f8e03686e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b21480"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f8e036e9020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f8e03674a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7f8e03674a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02ab4480"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f8e036de348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f8e03663740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7f8e03663740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02a42480"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f8e036e64d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f8e03671e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7f8e03671e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02aab480"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f8e036fd348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f8e036935b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7f8e036935b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b85480"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f8e036f24d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f8e036812a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7f8e036812a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f8e02b18480"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e0375f670"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f8e0375eb30"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f8e03742648"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8e0373d0d0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8e02f15db0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="MainBoot" scoped="" ref="0x7f8e0308b118"/></from>
      <to><interface-ref name="MainBoot" scoped="" ref="0x7f8e0354d1f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f8e0308b7f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8e03545428"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8e03545428"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8e034a72e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f8e0308a468"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f8e030b7d50"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8e03086700"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8e030bc1d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8e030bc1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8e029484f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8e03085430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8e030bcd88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7f8e030bcd88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8e0352c8a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f8e034a72e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f8e0347fb90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8e0353a898"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8e0350ab60"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8e0352c8a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8e034ae578"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8e035434f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8e034b09a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8e035160d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8e034ad268"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8e0351c0f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8e034af020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8e034aab98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e0347f578"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8e034a35a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8e0352d020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f8e034adbb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8e034a5ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f8e034ac8c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8e034a5270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f8e0349fba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f8e0313e3e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8e034a5ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8e0335c020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f8e034a5270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f8e0335e868"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f8e0335cdb8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f8e0349fba8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8e03477bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8e034a35a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8e0335aa50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8e034a35a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f8e03352420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8e034a35a8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f8e0335b6c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f8e03475b48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f8e0335a020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f8e03479898"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f8e0346fb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f8e03356b30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f8e0346bb00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8e0332f5d8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f8e0332f5d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8e033260c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f8e03346448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f8e0332fda0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f8e0332fda0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f8e03325080"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f8e0341b4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f8e034508e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f8e0341d590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f8e034186b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f8e03358100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f8e033588a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f8e0332b020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f8e03326878"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f8e03326878"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f8e0331ae58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f8e03325080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f8e032d95f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f8e033260c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8e0331a6f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8e0331d630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8e03246150"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/platforms/inga/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8e03246150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8e03167878"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8e032d6c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8e0331d630"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f8e032d85f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8e032b3700"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8e032b3700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8e032ab730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f8e032d8d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8e032b2020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8e032b2020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8e032aa020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f8e032d75c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f8e032b2860"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f8e032b2860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f8e032aa8a0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f8e032af020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f8e032a76d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f8e032b1e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f8e032a8568"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f8e032b06f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f8e032a8e00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8e032a6c70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8e03717b98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f8e032a5950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f8e0373fa80"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/inga/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f8e0314bb10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8e03241020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/inga/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8e03241020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8e03182e08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/inga/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8e0316f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e0323b020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8e0323b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e03210c08"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e03226b40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e03209c90"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f8e0321e628"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f8e03207350"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8e03213a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f8e03203c48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8e03213a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f8e031fe020"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/inga/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8e03195540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e0323b020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8e030bb9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8e0351c0f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7f8e030b90a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8e035160d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7f8e02947140"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8e031115d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8e02947cf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8e0351c0f0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f8e031115d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f8e030ca920"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f8e030c96f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f8e0353a898"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f8e030c83f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f8e0351c0f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f8e030c7a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f8e0352c8a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7f8e030c5780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f8e030c4020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f8e0307bc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8e0303cc08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e0305e368"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f8e0305c020"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f8e0305f7d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f8e0305f7d0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7f8e036df1a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f8e0305b190"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f8e0303e998"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f8e0303e998"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x7f8e036dd4d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f8e0305a338"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f8e0303db20"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f8e0303db20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8e0303aa50"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/inga/IngaC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f8e02fdb460"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f8e03325080"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/inga/IngaC.nc">
      <from><interface-ref name="UartCtl" scoped="" ref="0x7f8e02fda520"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f8e033260c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f8e02fc44e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f8e02fbbb50"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f8e02fbbb50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e02e415e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8e02fbfe18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e02fb15b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f8e02fb5108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f8e02e32128"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/inga/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f8e02fb15b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e02eba148"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f8e02e3b858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e02e8dab0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8e02e88c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f8e02fad020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/inga/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f8e02fad020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8e02eba8f0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f8e02e29330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f8e02fa3338"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/inga/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f8e02fa3338"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8e02eb7a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7f8e02eb7a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f8e028e6128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7f8e02eba148"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f8e028eb720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7f8e02eba8f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f8e028e9020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7f8e028e3228"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e02f2e508"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f8e02f2e508"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f8e02f1f728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e028de0c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e02f295c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e02f295c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e02f1a828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x7f8e028dd3b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8e02f28980"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f8e02f28980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f8e02f18c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f8e028d9510"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f8e02f24c38"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f8e02f24c38"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f8e02f13520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7f8e02e84cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f8e02e36930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/platforms/inga/LocalIeeeEui64C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8e02df9890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8e02de81d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7f8e02de81d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8e02ddb1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/inga/LocalIeeeEui64C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02e02c30"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02c3e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02c3e020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02dd94f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/inga/LocalIeeeEui64C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f8e02e10cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f8e03720940"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f8e02ddb1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8e02d44020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02dd94f8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02d44e60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f8e02d0da78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8e02d5c020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7f8e02d5c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f8e028634b0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f8e02d0c888"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02ca7700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f8e02d07318"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f8e02ca2318"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f8e02d55100"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f8e02d04e60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8e02d55db8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8e02d5a4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8e02d5a4a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8e02862940"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f8e02ca2930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f8e02c9a7d0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f8e02c9a7d0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f8e02c91020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f8e02c9f2e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8e02c57358"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f8e02c9e908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f8e02c57358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f8e02d5cd18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f8e02862200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8e02d590e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8e02861578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8e02861e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8e02d59960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7f8e028605d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f8e028653f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f8e0285d5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f8e02c8f9c8"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7f8e036ef968"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f8e02c8ec80"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7f8e036edaf0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f8e02bc9430"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f8e02c2f020"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/inga/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f8e02c2f020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f8e02bf1d98"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f8e02bca280"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f8e02c33990"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/inga/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f8e02c33990"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f8e036f6e00"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7f8e02bc0290"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f8e02bce8e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f8e02bbf468"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f8e02bcd978"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/inga/HplUserButtonC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f8e02bf08d0"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7f8e02c27b38"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f8e02c27b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8e02bf5020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f8e02c28c88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8e02bf93e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f8e02c24de0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f8e02c106a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8e02bfd5f8"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f8e02c1b850"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8e02bf82e8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f8e02c1e020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f8e02bf5de0"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f8e02c1e758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f8e02bc8020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/lib/printf/MainC.nc">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformP.nc" safe="">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="40:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformP.nc">
        <short>&#10; The raven portion of a mica-family initialization that is&#10; mote-specific.</short>
        <long>&#10; The raven portion of a mica-family initialization that is&#10; mote-specific.&#10; &#10; @author David Gay&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega1284's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega1284's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="57:/opt/tinyos-2.1.1/tos/platforms/inga/MeasureClockC.nc">
      <documentation loc="48:/opt/tinyos-2.1.1/tos/platforms/inga/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="77:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC" loc="45:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="113:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1284 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1284 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.1/tos/platforms/inga/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/inga/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/inga/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/inga/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1284 timer 3.</short>
        <long>&#10; HPL interface to Atmega1284 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1284Timer3P" loc="76:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer3P.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TThree" ref="0x7f8e03765cc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8e0379dc98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TThree" ref="0x7f8e03765cc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f8e037635f8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="39(PrintfC.SerialAMSenderC):/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="35(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-2.1.1/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009/06/25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="84:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.NoPinC" loc="16(PlatformLedsC.NoPinC):/opt/tinyos-2.1.1/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkIngaC" loc="45:BlinkIngaC.nc" safe="">
      <module/>
    </component>
    <component qname="IngaC" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/IngaC.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/platforms/inga/inga.h">
        <short>&#10; Commands for controlling platform coprocessor (atmega3290) via Uart0 (SIPC - serial inter-platform communication).</short>
        <long>&#10; Commands for controlling platform coprocessor (atmega3290) via Uart0 (SIPC - serial inter-platform communication).&#10;&#10;  @author Martin Cerveny&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IngaP" loc="40:/opt/tinyos-2.1.1/tos/platforms/inga/IngaP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/platforms/inga/inga.h">
        <short>&#10; Commands for controlling platform coprocessor (atmega3290) via Uart0 (SIPC - serial inter-platform communication).</short>
        <long>&#10; Commands for controlling platform coprocessor (atmega3290) via Uart0 (SIPC - serial inter-platform communication).&#10;&#10;  @author Martin Cerveny&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkIngaAppC.Timer0" loc="36(BlinkIngaAppC.Timer0):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="24:/opt/tinyos-2.1.1/tos/platforms/inga/AlarmCounterMilliP.nc">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="60(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP" loc="60(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1284AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f8e02f9d150"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1284Timer2AsyncC" loc="78:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1284Timer2AsyncP" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkIngaAppC.Timer1" loc="36(BlinkIngaAppC.Timer1):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64C" loc="36:/opt/tinyos-2.1.1/tos/platforms/inga/LocalIeeeEui64C.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/inga/LocalIeeeEui64C.nc">
        <short>&#10; </short>
        <long>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IngaIeeeEui64P" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/IngaIeeeEui64P.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/platforms/inga/IngaIeeeEui64P.nc">
        <short>&#10; EUI64 reader.</short>
        <long>&#10; EUI64 reader.&#10;&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C.Atm128I2CMasterC" loc="43(LocalIeeeEui64C.Atm128I2CMasterC):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="75(Atm128I2CMasterP.Master):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega1284 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega1284 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/inga/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:/opt/tinyos-2.1.1/tos/platforms/inga/HplUserButtonC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/inga/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega1284.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega1284.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="6(HplUserButtonC.InterruptUserButtonC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):/opt/tinyos-2.1.1/tos/platforms/inga/SwitchToggleC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/inga/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/inga/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f8e036d9748" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f8e036d9a90" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f8e036d9dd8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f8e036ca020" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f8e036ca388" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f8e036ca6f0" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f8e036caa20" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f8e03197da8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8e03197da8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f8e03194168" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f8e03183540" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f8e03183540"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f8e03183c90" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8e03183c90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f8e03169bd8" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f8e03169bd8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f8e03165380" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f8e03165380"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f8e03165748" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f8e03165748"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f8e03164020" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f8e03164020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f8e031643c8" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f8e03164b58" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f8e03164b58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f8e03131b58" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f8e0312a4c0" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f8e0310f890" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.1/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009/06/25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f8e030b5270" loc="42:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f8e030b5270"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f8e030b55c8" loc="42:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos-2.1.1/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f8e02f9d150" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f8e02f9d150"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f8e02f9d440" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1284AlarmAsyncP" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1284's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f8e02f94770" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
          <component-ref qname="Atm1284AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f8e02f94770"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f8e02f94a60" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
          <component-ref qname="Atm1284AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8e02faec60" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8e02faec60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8e02e82cc8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8e02e82cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f8e02e7f020" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8e02e349f0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8e02e349f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f8e02dd3df0" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f8e02dbe170" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f8e02da6a88" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f8e02c1f540" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f8e02c1f8a8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f8e02c1fc10" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f8e02c0f020" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/SwitchToggleC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/inga/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f8e03722d50" loc="47:/opt/tinyos-2.1.1/tos/lib/printf/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e03722d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e037210d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8e03720940" loc="46:/opt/tinyos-2.1.1/tos/lib/printf/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8e03720940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8e03720c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f8e0371c9a0" loc="51:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f8e0371c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0371ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e03721d10" loc="45:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e03721d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0371d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f8e03717b98" loc="49:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8e03717b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f8e0371c020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f8e0371c1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f8e0371c330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f8e0371c4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f8e0371c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f8e03714370" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f8e03714370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e037146c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e0371bc10" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e0371bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e03714020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f8e03714a38" loc="44:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f8e03714a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e03714d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f8e0370f7d0" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f8e0370f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0370fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f8e0370f140" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f8e0370f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0370f490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f8e03709020" loc="47:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f8e03709020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e03709370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f8e03705cd0" loc="46:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f8e03705cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0370a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0370a228"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0370a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0370a538"/>
        <function-ref name="get" scoped="" ref="0x7f8e0370a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0370a848"/>
        <function-ref name="set" scoped="" ref="0x7f8e0370a9d0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0370ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f8e0370eb00" loc="45:/opt/tinyos-2.1.1/tos/platforms/inga/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f8e0370eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0370ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f8e036e4af0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f8e036e4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e4e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e3330"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e3640"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e37c8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f8e036fa7e0" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f8e036fa7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036fab30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036facb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036fae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f9020"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f9330"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f94b8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f8e036f8af0" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f8e036f8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f8e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f7330"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f7640"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f77c8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f8e036ecc78" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f8e036ecc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036eb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036eb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036eb330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036eb4b8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036eb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036eb7c8"/>
        <function-ref name="set" scoped="" ref="0x7f8e036eb950"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036ebad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f8e036ff020" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f8e036ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036ff370"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036ff4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036ff680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036ff808"/>
        <function-ref name="get" scoped="" ref="0x7f8e036ff990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036ffb18"/>
        <function-ref name="set" scoped="" ref="0x7f8e036ffca0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036ffe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f8e036f4020" loc="58:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f8e036f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f4370"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f4808"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f4b18"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f8e036e81a0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f8e036e81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e84f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e8678"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e8800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e8988"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e8c98"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e8e20"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f8e036e0020" loc="77:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f8e036e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e0370"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e04f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e0680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e0808"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e0b18"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e0ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f8e036dd4d0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f8e036dd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036dd820"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036dd9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036ddb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036ddcb8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036dde40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036dc020"/>
        <function-ref name="set" scoped="" ref="0x7f8e036dc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036dc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f8e036fc4d0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f8e036fc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036fc820"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036fc9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036fcb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036fccb8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036fce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036fb020"/>
        <function-ref name="set" scoped="" ref="0x7f8e036fb1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f8e036f1658" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f8e036f1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f19a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f1b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f1cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f1e40"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f01a8"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f0330"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f8e036ef968" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f8e036ef968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036efcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036efe40"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036ed1a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036ed330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036ed4b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e036ed640"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036ed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f8e036e3c78" loc="75:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f8e036e3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e24b8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e27c8"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e2950"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f8e036f9968" loc="53:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f8e036f9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f9cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f9e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f81a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f84b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f8640"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f8e036f7c78" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f8e036f7c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f61a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f6330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f64b8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f67c8"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f6950"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f8e036ebe00" loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f8e036ebe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036ea1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036ea330"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036ea4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036ea640"/>
        <function-ref name="get" scoped="" ref="0x7f8e036ea7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036ea950"/>
        <function-ref name="set" scoped="" ref="0x7f8e036eaad8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036eac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f8e036fe1a0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f8e036fe1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036fe4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036fe678"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036fe800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036fe988"/>
        <function-ref name="get" scoped="" ref="0x7f8e036feb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036fec98"/>
        <function-ref name="set" scoped="" ref="0x7f8e036fee20"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f8e036f31a0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f8e036f31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f35f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f3778"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f3900"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f3a88"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f3c10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f3d98"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f2020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f8e036e7348" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f8e036e7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e7698"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e7820"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e7b30"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e7e40"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e6020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f8e036df1a0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f8e036df1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036df4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036df678"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036df800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036df988"/>
        <function-ref name="get" scoped="" ref="0x7f8e036dfb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036dfc98"/>
        <function-ref name="set" scoped="" ref="0x7f8e036dfe20"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f8e036e5658" loc="73:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f8e036e5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e5ba8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e5d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e41a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e44b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e4640"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f8e036fb658" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f8e036fb658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036fb9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036fbb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036fbcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036fbe40"/>
        <function-ref name="get" scoped="" ref="0x7f8e036fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036fa1a8"/>
        <function-ref name="set" scoped="" ref="0x7f8e036fa330"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f8e036f07e0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f8e036f07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f0b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f0cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f0e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036ef020"/>
        <function-ref name="get" scoped="" ref="0x7f8e036ef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036ef330"/>
        <function-ref name="set" scoped="" ref="0x7f8e036ef4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f8e036edaf0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f8e036edaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036ede40"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036ec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036ec1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036ec330"/>
        <function-ref name="get" scoped="" ref="0x7f8e036ec4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036ec640"/>
        <function-ref name="set" scoped="" ref="0x7f8e036ec7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036ec950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f8e036e2e00" loc="76:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f8e036e2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e11a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e1330"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e1640"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e1950"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e1ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f8e0370ddb8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f8e0370ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03700170"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e037002f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03700480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03700608"/>
        <function-ref name="get" scoped="" ref="0x7f8e03700790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03700918"/>
        <function-ref name="set" scoped="" ref="0x7f8e03700aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03700c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f8e036f6e00" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f8e036f6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f51a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f5330"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f5640"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f5950"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f5ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f8e036e9020" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f8e036e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e9370"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e94f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e9680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e9808"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e9b18"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e9ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f8e036de348" loc="79:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f8e036de348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036de698"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036de820"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036de9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036deb30"/>
        <function-ref name="get" scoped="" ref="0x7f8e036decb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036dee40"/>
        <function-ref name="set" scoped="" ref="0x7f8e036dd020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f8e036e64d0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f8e036e64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036e6820"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036e69a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036e6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036e6cb8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036e6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036e5020"/>
        <function-ref name="set" scoped="" ref="0x7f8e036e51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036e5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f8e036fd348" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f8e036fd348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036fd698"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036fd820"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036fd9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036fdb30"/>
        <function-ref name="get" scoped="" ref="0x7f8e036fdcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036fde40"/>
        <function-ref name="set" scoped="" ref="0x7f8e036fc020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f8e036f24d0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f8e036f24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036f2820"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036f29a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036f2b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036f2cb8"/>
        <function-ref name="get" scoped="" ref="0x7f8e036f2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036f1020"/>
        <function-ref name="set" scoped="" ref="0x7f8e036f11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036f1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8e03694430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8e03694430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03694780"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03694908"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03694a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03694c18"/>
        <function-ref name="get" scoped="" ref="0x7f8e03694da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03693020"/>
        <function-ref name="set" scoped="" ref="0x7f8e036931a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03693330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8e036918c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8e036918c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03691c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03691da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03690020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036901a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e03690330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036904b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03690640"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036907c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8e036961e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8e036961e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03696538"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036966c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03696848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036969d0"/>
        <function-ref name="get" scoped="" ref="0x7f8e03696b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03696ce0"/>
        <function-ref name="set" scoped="" ref="0x7f8e03696e68"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03695020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8e036935b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8e036935b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03693908"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03693a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03693c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03693da0"/>
        <function-ref name="get" scoped="" ref="0x7f8e03692020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036921a8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03692330"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036924b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8e03690a50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8e03690a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03690da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0368e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0368e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0368e330"/>
        <function-ref name="get" scoped="" ref="0x7f8e0368e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0368e640"/>
        <function-ref name="set" scoped="" ref="0x7f8e0368e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0368e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8e036952a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8e036952a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036955f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03695780"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03695908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03695a90"/>
        <function-ref name="get" scoped="" ref="0x7f8e03695c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03695da0"/>
        <function-ref name="set" scoped="" ref="0x7f8e03694020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8e03692740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8e03692740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03692a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03692c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03692da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03691020"/>
        <function-ref name="get" scoped="" ref="0x7f8e036911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03691330"/>
        <function-ref name="set" scoped="" ref="0x7f8e036914b8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03691640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8e0368ebd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8e0368ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0368d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0368d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0368d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0368d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f8e0368d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0368d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f8e0368d950"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0368dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b944e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b944e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b94830"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b949b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b94b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b94cc8"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b94e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b92020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b921a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b92330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b8b480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b8b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b8b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b8b958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b8bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b8bc68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b8bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b8a020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b8a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b8a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b88480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b88480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b887d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b88958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b88ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b88c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b88df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b87020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b871a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b87330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b85480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b85480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b857d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b85958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b85ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b85c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b85df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b84020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b841a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b84330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b82480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b82480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b827d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b82958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b82ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b82c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b82df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b81020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b811a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b7f480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b7f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b7f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b7f958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b7fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b7fc68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b7fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b7e020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b7e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b7e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b7c480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b7c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b7c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b7c958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b7cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b7cc68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b7cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b7b020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b7b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b7b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b79480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b79480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b797d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b79958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b79ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b79c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b79df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b78020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b781a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b78330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8e03686e18" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8e03686e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036851a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03685330"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036854b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03685640"/>
        <function-ref name="get" scoped="" ref="0x7f8e036857c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03685950"/>
        <function-ref name="set" scoped="" ref="0x7f8e03685ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03685c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8e036812a8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8e036812a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036815f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03681780"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03681908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03681a90"/>
        <function-ref name="get" scoped="" ref="0x7f8e03681c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03681da0"/>
        <function-ref name="set" scoped="" ref="0x7f8e03680020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8e03688bd0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8e03688bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03687020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036871a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03687330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036874b8"/>
        <function-ref name="get" scoped="" ref="0x7f8e03687640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036877c8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03687950"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03687ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8e03684020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8e03684020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03684370"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036844f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03684680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03684808"/>
        <function-ref name="get" scoped="" ref="0x7f8e03684990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03684b18"/>
        <function-ref name="set" scoped="" ref="0x7f8e03684ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03684e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8e03680430" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8e03680430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03680780"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03680908"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03680a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03680c18"/>
        <function-ref name="get" scoped="" ref="0x7f8e03680da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0367f020"/>
        <function-ref name="set" scoped="" ref="0x7f8e0367f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0367f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8e03687d60" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8e03687d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036860d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03686260"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036863e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03686570"/>
        <function-ref name="get" scoped="" ref="0x7f8e036866f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03686880"/>
        <function-ref name="set" scoped="" ref="0x7f8e03686a08"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03686b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8e03682120" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8e03682120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03682470"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036825f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03682780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03682908"/>
        <function-ref name="get" scoped="" ref="0x7f8e03682a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03682c18"/>
        <function-ref name="set" scoped="" ref="0x7f8e03682da0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03681020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8e0367f5b8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8e0367f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0367f908"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0367fa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0367fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0367fda0"/>
        <function-ref name="get" scoped="" ref="0x7f8e0367e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0367e1a8"/>
        <function-ref name="set" scoped="" ref="0x7f8e0367e330"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0367e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b283e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b283e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b28730"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b288b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b28a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b28bc8"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b28d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b26020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b261a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b26330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b24480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b24480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b247d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b24958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b24ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b24c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b24df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b23020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b231a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b23330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b21480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b21480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b217d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b21958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b21ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b21c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b21df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b20020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b201a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b20330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b1e480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b1e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b1e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b1e958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b1eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b1ec68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b1edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b1d020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b1d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b1d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b1b480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b1b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b1b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b1b958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b1bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b1bc68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b1bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b1a020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b1a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b1a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b18480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b18480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b187d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b18958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b18ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b18c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b18df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b17020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b171a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b17330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b15480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b15480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b157d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b15958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b15ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b15c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b15df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b14020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b141a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b14330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02b12480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02b12480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02b127d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02b12958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02b12ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02b12c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02b12df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02b11020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02b111a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02b11330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8e03676740" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8e03676740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03676a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03676c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03676da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03675020"/>
        <function-ref name="get" scoped="" ref="0x7f8e036751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03675330"/>
        <function-ref name="set" scoped="" ref="0x7f8e036754b8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03675640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8e03673bd8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8e03673bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03672020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036721a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03672330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036724b8"/>
        <function-ref name="get" scoped="" ref="0x7f8e03672640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036727c8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03672950"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03672ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8e03679500" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8e03679500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03679850"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036799d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03679b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03679ce8"/>
        <function-ref name="get" scoped="" ref="0x7f8e03679e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03677020"/>
        <function-ref name="set" scoped="" ref="0x7f8e036771a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03677330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8e036758c8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8e036758c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03675c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03675da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03674020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036741a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e03674330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036744b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03674640"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8e03672d60" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8e03672d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036710d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03671260"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036713e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03671570"/>
        <function-ref name="get" scoped="" ref="0x7f8e036716f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03671880"/>
        <function-ref name="set" scoped="" ref="0x7f8e03671a08"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03671b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8e036775b8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8e036775b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03677908"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03677a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03677c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03677da0"/>
        <function-ref name="get" scoped="" ref="0x7f8e03676020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036761a8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03676330"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036764b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8e03674a50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8e03674a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03674da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03673020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036731a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03673330"/>
        <function-ref name="get" scoped="" ref="0x7f8e036734b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03673640"/>
        <function-ref name="set" scoped="" ref="0x7f8e036737c8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03673950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8e03671e18" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8e03671e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036701a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03670330"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036704b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03670640"/>
        <function-ref name="get" scoped="" ref="0x7f8e036707c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03670950"/>
        <function-ref name="set" scoped="" ref="0x7f8e03670ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03670c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02ac13e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02ac13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02ac1730"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02ac18b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02ac1a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02ac1bc8"/>
        <function-ref name="get" scoped="" ref="0x7f8e02ac1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02ac0020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02ac01a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02ac0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02abe480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02abe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02abe7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02abe958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02abeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02abec68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02abedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02abc020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02abc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02abc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02aba480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02aba480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02aba7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02aba958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02abaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02abac68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02abadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02ab9020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02ab91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02ab9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02ab7480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02ab7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02ab77d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02ab7958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02ab7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02ab7c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02ab7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02ab6020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02ab61a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02ab6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02ab4480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02ab4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02ab47d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02ab4958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02ab4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02ab4c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02ab4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02ab3020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02ab31a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02ab3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02ab1480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02ab1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02ab17d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02ab1958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02ab1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02ab1c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02ab1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02ab0020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02ab01a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02ab0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02aae480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02aae480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02aae7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02aae958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02aaeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02aaec68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02aaedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02aad020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02aad1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02aad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02aab480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02aab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02aab7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02aab958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02aabae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02aabc68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02aabdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02aaa020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02aaa1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02aaa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f8e03667120" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f8e03667120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03667470"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036675f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03667780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03667908"/>
        <function-ref name="get" scoped="" ref="0x7f8e03667a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03667c18"/>
        <function-ref name="set" scoped="" ref="0x7f8e03667da0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03666020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f8e036645b8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f8e036645b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03664908"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03664a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03664c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03664da0"/>
        <function-ref name="get" scoped="" ref="0x7f8e03663020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036631a8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03663330"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f8e0366ae40" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f8e0366ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036691c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03669348"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e036694d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03669658"/>
        <function-ref name="get" scoped="" ref="0x7f8e036697e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03669968"/>
        <function-ref name="set" scoped="" ref="0x7f8e03669af0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03669c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f8e036662a8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f8e036662a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e036665f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03666780"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03666908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03666a90"/>
        <function-ref name="get" scoped="" ref="0x7f8e03666c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03666da0"/>
        <function-ref name="set" scoped="" ref="0x7f8e03665020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f8e03663740" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f8e03663740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03663a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03663c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03663da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03662020"/>
        <function-ref name="get" scoped="" ref="0x7f8e036621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03662330"/>
        <function-ref name="set" scoped="" ref="0x7f8e036624b8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03662640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f8e03668020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f8e03668020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03668370"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e036684f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03668680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03668808"/>
        <function-ref name="get" scoped="" ref="0x7f8e03668990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03668b18"/>
        <function-ref name="set" scoped="" ref="0x7f8e03668ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03668e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f8e03665430" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f8e03665430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03665780"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03665908"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03665a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03665c18"/>
        <function-ref name="get" scoped="" ref="0x7f8e03665da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03664020"/>
        <function-ref name="set" scoped="" ref="0x7f8e036641a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03664330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f8e036628c8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f8e036628c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e03662c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03662da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e03661020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e036611a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e03661330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e036614b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03661640"/>
        <function-ref name="clr" scoped="" ref="0x7f8e036617c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02a553e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02a553e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02a55730"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02a558b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02a55a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02a55bc8"/>
        <function-ref name="get" scoped="" ref="0x7f8e02a55d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02a54020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02a541a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02a54330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02a52480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02a52480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02a527d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02a52958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02a52ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02a52c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02a52df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02a50020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02a501a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02a50330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02a4e480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02a4e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02a4e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02a4e958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02a4eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02a4ec68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02a4edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02a4d020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02a4d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02a4d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02a4b480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02a4b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02a4b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02a4b958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02a4bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02a4bc68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02a4bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02a4a020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02a4a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02a4a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02a48480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02a48480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02a487d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02a48958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02a48ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02a48c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02a48df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02a47020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02a471a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02a47330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02a45480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02a45480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02a457d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02a45958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02a45ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02a45c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02a45df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02a44020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02a441a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02a44330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02a42480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02a42480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02a427d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02a42958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02a42ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02a42c68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02a42df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02a41020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02a411a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02a41330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f8e02a3f480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f8e02a3f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02a3f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02a3f958"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02a3fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02a3fc68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02a3fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02a3e020"/>
        <function-ref name="set" scoped="" ref="0x7f8e02a3e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02a3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e0363c020" loc="62:/opt/tinyos-2.1.1/tos/platforms/inga/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e0363c020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f8e03822128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f8e03822128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0363c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f8e0363c650" loc="63:/opt/tinyos-2.1.1/tos/platforms/inga/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8e0363c650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f8e0363c9a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f8e0363cb28"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f8e0363ccb0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f8e0363ce38"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f8e0363b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f8e0361c140" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e0361c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0361c490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8e0371e870" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8e0371e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8e0371ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f8e0361d9f8" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f8e0361d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0361dd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f8e0361d020" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f8e0361d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0361d370"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8e0361d4f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8e0361d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f8e037fcca0" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f8e037fcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e03827020"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e038271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f8e03805390" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f8e03805390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e038056e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8e03805868"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8e038059f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f8e0375f670" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f8e0375f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e0375f9c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e0375fb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f8e0375eb30" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f8e0375eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f8e0375ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f8e03760800" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f8e03760800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e03760b50"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f8e03760cd8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f8e03760e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f8e0373d0d0" loc="83:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8e0373d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f8e0373d420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f8e03742648" loc="79:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f8e03742648"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f8e03742998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f8e0373fa80" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f8e0373fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f8e0373fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8e0354e6c0" loc="47:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <component-ref qname="PrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8e0354e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8e0354ea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MainBoot" ref="0x7f8e0354d1f0" loc="49:/opt/tinyos-2.1.1/tos/lib/printf/PrintfC.nc">
      <component-ref qname="PrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MainBoot" scoped="" ref="0x7f8e0354d1f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f8e03822128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f8e03822128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8e0354d540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8e03545428" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8e03545428"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8e03545778"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8e03545900"/>
        <function-ref name="start" scoped="" ref="0x7f8e03545a88"/>
        <function-ref name="stop" scoped="" ref="0x7f8e03545c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8e0353a898" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8e0353a898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e0353abe8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e0353ad70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e03548020"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e035481a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e03548330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8e0352c8a0" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8e0352c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e0352cbf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8e0352cd78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e0353c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e0353c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8e0353c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8e035434f0" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8e035434f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8e03543840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8e0352d020" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e0352d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e0352d370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e0352d4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e0352d680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e0352d808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e0352d990"/>
        <function-ref name="get" scoped="" ref="0x7f8e0352db18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e0352dca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e0351b330"/>
        <function-ref name="set" scoped="" ref="0x7f8e0352de28"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e0351b020"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e0351b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f8e035160d0" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8e035160d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8e03516420"/>
        <function-ref name="noAck" scoped="" ref="0x7f8e035165a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8e03516730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8e0351c0f0" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8e0351c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8e0351c440"/>
        <function-ref name="source" scoped="" ref="0x7f8e0351c5c8"/>
        <function-ref name="address" scoped="" ref="0x7f8e0351c750"/>
        <function-ref name="destination" scoped="" ref="0x7f8e0351c8d8"/>
        <function-ref name="setSource" scoped="" ref="0x7f8e0351ca60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8e0351cbe8"/>
        <function-ref name="type" scoped="" ref="0x7f8e0351cd70"/>
        <function-ref name="setType" scoped="" ref="0x7f8e03535020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8e035351a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8e03535330"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8e035354b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f8e034adbb0" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f8e034adbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e034ac020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e034ac1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e034ac330"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e034ac4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e034ac640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f8e034ac8c8" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f8e034ac8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8e034acc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8e0350ab60" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8e0350ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e034b0020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e034b01a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e034b0330"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e034b04b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e034b0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8e034ae578" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8e034ae578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e034ae8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8e034aea50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e034aebd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e034aed60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8e034ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8e034b09a8" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8e034b09a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8e034b0d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f8e034ad268" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f8e034ad268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8e034ad5b8"/>
        <function-ref name="noAck" scoped="" ref="0x7f8e034ad740"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8e034ad8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8e034af020" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8e034af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8e034af370"/>
        <function-ref name="source" scoped="" ref="0x7f8e034af4f8"/>
        <function-ref name="address" scoped="" ref="0x7f8e034af680"/>
        <function-ref name="destination" scoped="" ref="0x7f8e034af808"/>
        <function-ref name="setSource" scoped="" ref="0x7f8e034af990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8e034afb18"/>
        <function-ref name="type" scoped="" ref="0x7f8e034afca0"/>
        <function-ref name="setType" scoped="" ref="0x7f8e034afe28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8e034ae020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8e034ae1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8e034ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8e034a72e8" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8e034a72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8e034a7638"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8e034a77c0"/>
        <function-ref name="start" scoped="" ref="0x7f8e034a7948"/>
        <function-ref name="stop" scoped="" ref="0x7f8e034a7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8e034a5ce8" loc="41:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8e034a5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8e0355f8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e034a40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e034a4228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e034a43b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e034a4538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e034a46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e034aab98" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e034aab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e034a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8e034a5270" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8e034a5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8e0355f8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8e034a55c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8e034a35a8" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e034a35a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e034a38f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e034a3a80"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e034a3c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e034a3d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e034a2020"/>
        <function-ref name="get" scoped="" ref="0x7f8e034a21a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e034a2330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e034a2950"/>
        <function-ref name="set" scoped="" ref="0x7f8e034a24b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e034a2640"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e034a27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f8e0349fba8" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f8e0349fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8e0355f8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f8e034a3020"/>
        <function-ref name="offset" scoped="" ref="0x7f8e034a31a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f8e034a3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f8e0347fb90" loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f8e0347fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8e0347e020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8e0347e1a8"/>
        <function-ref name="start" scoped="" ref="0x7f8e0347e330"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0347e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f8e0341b4d8" loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f8e0341b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e0341b828"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e0341b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f8e0346bb00" loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f8e0346bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e0346be50"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0346d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f8e034508e0" loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f8e034508e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e03450c30"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e03450db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e0347f578" loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e0347f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0347f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f8e03468608" loc="73:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f8e03468608"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f8e03468958"/>
        <function-ref name="flush" scoped="" ref="0x7f8e03468ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f8e0341d590" loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f8e0341d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e0341d8e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e0341da68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f8e0346fb38" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f8e0346fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f8e03477020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f8e034771a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f8e03477330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f8e034774b8"/>
        <function-ref name="putData" scoped="" ref="0x7f8e03477640"/>
        <function-ref name="putDone" scoped="" ref="0x7f8e034777c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f8e03477950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8e03477bc8" loc="71:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e03477bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e03474020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e034741a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e03474330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e034744b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e03474640"/>
        <function-ref name="get" scoped="" ref="0x7f8e034747c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e03474950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e0346e020"/>
        <function-ref name="set" scoped="" ref="0x7f8e03474ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e03474c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e03474de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f8e034186b0" loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f8e034186b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e03418a00"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e03418b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f8e03479898" loc="65:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f8e03479898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f8e03479be8"/>
        <function-ref name="nextByte" scoped="" ref="0x7f8e03479d70"/>
        <function-ref name="startSend" scoped="" ref="0x7f8e0347d020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f8e0347d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f8e03475b48" loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f8e03475b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f8e03478020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f8e034781a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7f8e03478330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f8e03358100" loc="264:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f8e03358100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e03358450"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e033585d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8e0335c020" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8e0335c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8e0355f8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e0335c390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e0335c518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e0335c6a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e0335c828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e0335c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f8e033588a0" loc="147:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f8e033588a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e03358bf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e03358d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f8e0335e868" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f8e0335e868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8e0355f8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f8e0335ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f8e0335cdb8" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f8e0335cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f8e0355f8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f8e0335b170"/>
        <function-ref name="offset" scoped="" ref="0x7f8e0335b2f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f8e0335b480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8e0335aa50" loc="46:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e0335aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e0335ada0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e03359020"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e033591a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e03359330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e033594b8"/>
        <function-ref name="get" scoped="" ref="0x7f8e03359640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e033597c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e03359de8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03359ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e03359950"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e03359c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f8e0335a020" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f8e0335a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f8e0335a370"/>
        <function-ref name="nextByte" scoped="" ref="0x7f8e0335a4f8"/>
        <function-ref name="startSend" scoped="" ref="0x7f8e0335a680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f8e0335a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f8e0335b6c8" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f8e0335b6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f8e0335ba18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f8e0335bba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f8e0335bd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f8e03346448" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8e03346448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e03346798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8e03346920"/>
        <function-ref name="receive" scoped="" ref="0x7f8e03346aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8e03346c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8e03346db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8e03352020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e033521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f8e03356b30" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f8e03356b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f8e03356e80"/>
        <function-ref name="resetSend" scoped="" ref="0x7f8e03353030"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f8e033531b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f8e03353340"/>
        <function-ref name="putData" scoped="" ref="0x7f8e033534c8"/>
        <function-ref name="putDone" scoped="" ref="0x7f8e03353650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f8e033537d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8e03352420" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e03352420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e03352770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e033528f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e03352a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e03352c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e03352d90"/>
        <function-ref name="get" scoped="" ref="0x7f8e03351020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e033511a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e033517c8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03351330"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e033514b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e03351640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f8e0332b020" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f8e0332b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e0332b370"/>
        <function-ref name="receive" scoped="" ref="0x7f8e0332b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f8e0332fda0" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8e0332fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e0332c170"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8e0332c2f8"/>
        <function-ref name="receive" scoped="" ref="0x7f8e0332c480"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8e0332c608"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8e0332c790"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8e0332c918"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e0332caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8e0332f5d8" loc="40:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8e0332f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e0332f928"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0332fab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f8e03326878" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f8e03326878"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e03326bc8"/>
        <function-ref name="receive" scoped="" ref="0x7f8e03326d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f8e03325080" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8e03325080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e033253d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8e03325558"/>
        <function-ref name="receive" scoped="" ref="0x7f8e033256e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8e03325868"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8e033259f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8e03325b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e03325d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8e0331d630" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e0331d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8e0379dc98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e033233a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e03323cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e03323830"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e03321190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8e033260c0" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8e033260c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e03326410"/>
        <function-ref name="stop" scoped="" ref="0x7f8e03326598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f8e0331ae58" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f8e0331ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e032d91e8"/>
        <function-ref name="receive" scoped="" ref="0x7f8e032d9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f8e032d85f8" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f8e032d85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032d8948"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032d8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e0331a120" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e0331a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0331a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f8e032d95f8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8e032d95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e032d9948"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8e032d9ad0"/>
        <function-ref name="receive" scoped="" ref="0x7f8e032d9c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8e032d9de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8e032d8020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8e032d81a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e032d8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8e032d6c60" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e032d6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8e0379dc98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e032d59f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e032d4330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e032d5e78"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e032d47b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f8e032d75c0" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f8e032d75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8e032d7910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8e032d7a98"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8e032d7c20"/>
        <function-ref name="txDone" scoped="" ref="0x7f8e032d7da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8e032d6020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8e032d61a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8e032d6330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8e032d64b8"/>
        <function-ref name="tx" scoped="" ref="0x7f8e032d6640"/>
        <function-ref name="rx" scoped="" ref="0x7f8e032d67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f8e0331a6f8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f8e0331a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e0331aa48"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0331abd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f8e032d8d98" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f8e032d8d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032d7170"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032d72f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f8e032b2860" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f8e032b2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8e032b2bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8e032b2d38"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8e032b1020"/>
        <function-ref name="txDone" scoped="" ref="0x7f8e032b11a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8e032b1330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8e032b14b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8e032b1640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8e032b17c8"/>
        <function-ref name="tx" scoped="" ref="0x7f8e032b1950"/>
        <function-ref name="rx" scoped="" ref="0x7f8e032b1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f8e032af020" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f8e032af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8e032af370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8e032af4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8e032af680"/>
        <function-ref name="txDone" scoped="" ref="0x7f8e032af808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8e032af990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8e032afb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8e032afca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8e032afe28"/>
        <function-ref name="tx" scoped="" ref="0x7f8e032ae020"/>
        <function-ref name="rx" scoped="" ref="0x7f8e032ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f8e032b2020" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8e032b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032b2370"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f8e032b1e58" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f8e032b1e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032b01e8"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032b0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f8e032b06f0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f8e032b06f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032b0a40"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032b0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f8e032b3700" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8e032b3700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032b3a50"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032b3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f8e032ab020" loc="115:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f8e032ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e032ab370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f8e032aa8a0" loc="118:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f8e032aa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8e032aabf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8e032aad78"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8e032a9020"/>
        <function-ref name="txDone" scoped="" ref="0x7f8e032a91a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8e032a9330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8e032a94b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8e032a9640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8e032a97c8"/>
        <function-ref name="tx" scoped="" ref="0x7f8e032a9950"/>
        <function-ref name="rx" scoped="" ref="0x7f8e032a9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f8e032a9e30" loc="120:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f8e032a9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e032a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f8e032a76d8" loc="123:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f8e032a76d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f8e032a7a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f8e032a7bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x7f8e032a7d38"/>
        <function-ref name="txDone" scoped="" ref="0x7f8e032a6020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f8e032a61a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f8e032a6330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f8e032a64b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f8e032a6640"/>
        <function-ref name="tx" scoped="" ref="0x7f8e032a67c8"/>
        <function-ref name="rx" scoped="" ref="0x7f8e032a6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f8e032aa020" loc="117:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f8e032aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032aa370"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032aa4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f8e032a8568" loc="121:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f8e032a8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032a88b8"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032a8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f8e032a8e00" loc="122:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f8e032a8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032a71a8"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032a7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f8e032a6c70" loc="125:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f8e032a6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f8e032a5020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f8e032a51a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f8e032a5330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f8e032a54b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f8e032a5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f8e032a5950" loc="126:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f8e032a5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f8e032a5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f8e032ab730" loc="116:/opt/tinyos-2.1.1/tos/chips/atm1284/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f8e032ab730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e032aba80"/>
        <function-ref name="stop" scoped="" ref="0x7f8e032abc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8e03246150" loc="24:/opt/tinyos-2.1.1/tos/platforms/inga/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e03246150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8e0379dc98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e03245020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e03245930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e032454a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e03245db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8e03241020" loc="24:/opt/tinyos-2.1.1/tos/platforms/inga/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e03241020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TThree" ref="0x7f8e03765cc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e03241d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e032406b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e03240230"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e03240b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8e03226b40" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e03226b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f8e0322d020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8e0322d1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f8e0322d330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8e0322d4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8e0322d640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f8e0322d7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8e0322d950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f8e0322dad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f8e0322dc60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f8e0322dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8e0321e628" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f8e0321e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f8e0321c798"/>
        <function-ref name="test" scoped="" ref="0x7f8e0321de20"/>
        <function-ref name="get" scoped="" ref="0x7f8e032241d0"/>
        <function-ref name="captured" scoped="" ref="0x7f8e03224b30"/>
        <function-ref name="reset" scoped="" ref="0x7f8e0321d088"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e0321c310"/>
        <function-ref name="set" scoped="" ref="0x7f8e03224658"/>
        <function-ref name="start" scoped="" ref="0x7f8e0321d510"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0321d998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8e03213a20" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8e03213a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8e03212270"/>
        <function-ref name="fired" scoped="" ref="0x7f8e0321a020"/>
        <function-ref name="get" scoped="" ref="0x7f8e0321b5d8"/>
        <function-ref name="reset" scoped="" ref="0x7f8e0321a4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e032126f8"/>
        <function-ref name="set" scoped="" ref="0x7f8e0321ba60"/>
        <function-ref name="start" scoped="" ref="0x7f8e0321a930"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0321adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8e0323b020" loc="79:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e0323b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8e032300f8"/>
        <function-ref name="test" scoped="" ref="0x7f8e032317a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e0323bba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8e03230580"/>
        <function-ref name="getScale" scoped="" ref="0x7f8e03230a58"/>
        <function-ref name="reset" scoped="" ref="0x7f8e032329e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e03232560"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e03231c30"/>
        <function-ref name="set" scoped="" ref="0x7f8e03232088"/>
        <function-ref name="start" scoped="" ref="0x7f8e03232e70"/>
        <function-ref name="stop" scoped="" ref="0x7f8e03231320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8e03209c90" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer3P.nc">
      <component-ref qname="HplAtm1284Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e03209c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f8e03208020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8e032081a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f8e03208330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8e032084b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8e03208640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f8e032087c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8e03208950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f8e03208ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f8e03208c60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f8e03208de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f8e03203c48" loc="83:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer3P.nc">
      <component-ref qname="HplAtm1284Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f8e03203c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8e031ff4a8"/>
        <function-ref name="fired" scoped="" ref="0x7f8e032001d0"/>
        <function-ref name="get" scoped="" ref="0x7f8e03202820"/>
        <function-ref name="reset" scoped="" ref="0x7f8e03200658"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e031ff930"/>
        <function-ref name="set" scoped="" ref="0x7f8e03202ca8"/>
        <function-ref name="start" scoped="" ref="0x7f8e03200ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f8e031ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f8e03207350" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer3P.nc">
      <component-ref qname="HplAtm1284Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f8e03207350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f8e03203580"/>
        <function-ref name="test" scoped="" ref="0x7f8e03204c20"/>
        <function-ref name="get" scoped="" ref="0x7f8e03206020"/>
        <function-ref name="captured" scoped="" ref="0x7f8e03206980"/>
        <function-ref name="reset" scoped="" ref="0x7f8e03206e58"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e032030f8"/>
        <function-ref name="set" scoped="" ref="0x7f8e032064a8"/>
        <function-ref name="start" scoped="" ref="0x7f8e03204310"/>
        <function-ref name="stop" scoped="" ref="0x7f8e03204798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f8e031fe020" loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer3P.nc">
      <component-ref qname="HplAtm1284Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f8e031fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8e031fb7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f8e031fd560"/>
        <function-ref name="get" scoped="" ref="0x7f8e031feba0"/>
        <function-ref name="reset" scoped="" ref="0x7f8e031fd9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e031fbc30"/>
        <function-ref name="set" scoped="" ref="0x7f8e031fd088"/>
        <function-ref name="start" scoped="" ref="0x7f8e031fde70"/>
        <function-ref name="stop" scoped="" ref="0x7f8e031fb320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8e03210c08" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer3P.nc">
      <component-ref qname="HplAtm1284Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e03210c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8e0320adb8"/>
        <function-ref name="test" scoped="" ref="0x7f8e0320a4a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e0320d820"/>
        <function-ref name="setScale" scoped="" ref="0x7f8e03209270"/>
        <function-ref name="getScale" scoped="" ref="0x7f8e03209748"/>
        <function-ref name="reset" scoped="" ref="0x7f8e0320c658"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e0320c1d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e0320a930"/>
        <function-ref name="set" scoped="" ref="0x7f8e0320dca8"/>
        <function-ref name="start" scoped="" ref="0x7f8e0320cae0"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0320a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e03196dc0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e03196dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f8e03823d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f8e03823d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e03195170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8e03195540" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e03195540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8e031866f8"/>
        <function-ref name="test" scoped="" ref="0x7f8e03187db8"/>
        <function-ref name="get" scoped="" ref="0x7f8e031890f8"/>
        <function-ref name="setScale" scoped="" ref="0x7f8e03186b80"/>
        <function-ref name="getScale" scoped="" ref="0x7f8e03185088"/>
        <function-ref name="reset" scoped="" ref="0x7f8e03187020"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e03189a58"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e03186270"/>
        <function-ref name="set" scoped="" ref="0x7f8e03189580"/>
        <function-ref name="start" scoped="" ref="0x7f8e031874a8"/>
        <function-ref name="stop" scoped="" ref="0x7f8e03187930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8e03182e08" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e03182e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TThree" ref="0x7f8e03765cc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e03181be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e03170548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e031700c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e031709d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8e0316f020" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e0316f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8e0316b0f8"/>
        <function-ref name="test" scoped="" ref="0x7f8e0316d7a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e0316fba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8e0316b580"/>
        <function-ref name="getScale" scoped="" ref="0x7f8e0316ba58"/>
        <function-ref name="reset" scoped="" ref="0x7f8e0316e9e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e0316e560"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e0316dc30"/>
        <function-ref name="set" scoped="" ref="0x7f8e0316e088"/>
        <function-ref name="start" scoped="" ref="0x7f8e0316ee70"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0316d320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f8e0314bb10" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f8e0314bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TThree" ref="0x7f8e03765cc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e0314a8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e03148230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e0314ad80"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e031486b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8e03167878" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e03167878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379d940"/>
            <typename><typedef-ref name="TMicro" ref="0x7f8e0379dc98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e0314c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e0314b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e0314cae8"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e0314b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f8e0313e3e8" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f8e0313e3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f8e0313e738"/>
        <function-ref name="offset" scoped="" ref="0x7f8e0313e8c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f8e0313ea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8e030bc1d0" loc="41:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8e030bc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e030bc520"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e030bc6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e030bc830"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e030bc9b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e030bcb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f8e030bcd88" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8e030bcd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e030bb170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8e030bb2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e030bb480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e030bb608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8e030bb790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f8e030bb9d8" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8e030bb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8e030bbd28"/>
        <function-ref name="source" scoped="" ref="0x7f8e030ba020"/>
        <function-ref name="address" scoped="" ref="0x7f8e030ba1a8"/>
        <function-ref name="destination" scoped="" ref="0x7f8e030ba330"/>
        <function-ref name="setSource" scoped="" ref="0x7f8e030ba4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8e030ba640"/>
        <function-ref name="type" scoped="" ref="0x7f8e030ba7c8"/>
        <function-ref name="setType" scoped="" ref="0x7f8e030ba950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8e030baad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8e030bac60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8e030bade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f8e030b90a0" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f8e030b90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f8e030b93f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f8e030b9578"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f8e030b9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f8e029484f8" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8e029484f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e02948848"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e029489d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e02948b58"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e02948ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e02948e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f8e02947140" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8e02947140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e02947490"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e02947618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e029477a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e02947928"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e02947ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f8e02947cf8" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8e02947cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8e029460a0"/>
        <function-ref name="source" scoped="" ref="0x7f8e02946228"/>
        <function-ref name="address" scoped="" ref="0x7f8e029463b0"/>
        <function-ref name="destination" scoped="" ref="0x7f8e02946538"/>
        <function-ref name="setSource" scoped="" ref="0x7f8e029466c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8e02946848"/>
        <function-ref name="type" scoped="" ref="0x7f8e029469d0"/>
        <function-ref name="setType" scoped="" ref="0x7f8e02946b58"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8e02946ce0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8e02946e68"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8e02945020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8e031115d8" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8e031115d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e03111928"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e03111ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e03111c38"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e03111dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e03110020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f8e030c96f8" loc="40:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8e030c96f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e030c9a68"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e030c9bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e030c9d78"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e030c8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e030c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f8e030ca920" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f8e030ca920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e030cac90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e030cae18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e030c9020"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e030c91a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e030c9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f8e030c7a10" loc="42:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8e030c7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e030c7d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8e030c5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e030c51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e030c5330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8e030c54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f8e030c5780" loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f8e030c5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e030c5ad0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e030c5c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f8e030c4020" loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f8e030c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e030c4370"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e030c44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f8e030c83f0" loc="41:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f8e030c83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f8e030c8740"/>
        <function-ref name="source" scoped="" ref="0x7f8e030c88c8"/>
        <function-ref name="address" scoped="" ref="0x7f8e030c8a50"/>
        <function-ref name="destination" scoped="" ref="0x7f8e030c8bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f8e030c8d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f8e030c7020"/>
        <function-ref name="type" scoped="" ref="0x7f8e030c71a8"/>
        <function-ref name="setType" scoped="" ref="0x7f8e030c7330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f8e030c74b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f8e030c7640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f8e030c77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f8e030b7d50" loc="43:/opt/tinyos-2.1.1/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f8e030b7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f8e03095610"/>
        <function-ref name="enqueue" scoped="" ref="0x7f8e03094300"/>
        <function-ref name="element" scoped="" ref="0x7f8e03094930"/>
        <function-ref name="maxSize" scoped="" ref="0x7f8e030951c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8e03095c70"/>
        <function-ref name="empty" scoped="" ref="0x7f8e030968f0"/>
        <function-ref name="size" scoped="" ref="0x7f8e03096d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f8e0308c9c0" loc="86:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8e0308c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8e0308cd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f8e0308b7f8" loc="90:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f8e0308b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f8e0308bb48"/>
        <function-ref name="stopDone" scoped="" ref="0x7f8e0308bcd0"/>
        <function-ref name="start" scoped="" ref="0x7f8e0308be58"/>
        <function-ref name="stop" scoped="" ref="0x7f8e0308a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f8e0308a468" loc="91:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f8e0308a468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f8e03089d10"/>
        <function-ref name="enqueue" scoped="" ref="0x7f8e03088a30"/>
        <function-ref name="element" scoped="" ref="0x7f8e03086088"/>
        <function-ref name="maxSize" scoped="" ref="0x7f8e030898c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8e030883d0"/>
        <function-ref name="empty" scoped="" ref="0x7f8e03089020"/>
        <function-ref name="size" scoped="" ref="0x7f8e03089470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f8e03086700" loc="93:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f8e03086700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e03086a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e03086bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e03086d60"/>
        <function-ref name="cancel" scoped="" ref="0x7f8e03085020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e030851a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f8e03085430" loc="94:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f8e03085430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e03085780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f8e03085908"/>
        <function-ref name="getPayload" scoped="" ref="0x7f8e03085a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f8e03085c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f8e03085da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f8e0307bc60" loc="127:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x7f8e0307bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e0307a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e0307a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8e03084080" loc="95:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e03084080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e030843d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e03084558"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e030846e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e03084868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e030849f0"/>
        <function-ref name="get" scoped="" ref="0x7f8e03084b78"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e03084d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e030834b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03083020"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e030831a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e03083330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MainBoot" ref="0x7f8e0308b118" loc="89:/opt/tinyos-2.1.1/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MainBoot" scoped="" ref="0x7f8e0308b118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8e0308b468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8e03062080" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e03062080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e030623d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e03062558"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e030626e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e03062868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e030629f0"/>
        <function-ref name="get" scoped="" ref="0x7f8e03062b78"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e03062d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e030614b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03061020"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e030611a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e03061330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f8e0305c020" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f8e0305c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0305c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0305c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0305c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0305c808"/>
        <function-ref name="get" scoped="" ref="0x7f8e0305c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0305cb18"/>
        <function-ref name="set" scoped="" ref="0x7f8e0305cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0305ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e0305e368" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e0305e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0305e6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f8e0305b190" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f8e0305b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0305b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0305b668"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0305b7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0305b978"/>
        <function-ref name="get" scoped="" ref="0x7f8e0305bb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0305bc88"/>
        <function-ref name="set" scoped="" ref="0x7f8e0305be10"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0305a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8e0305e930" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e0305e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e0305ec80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e0305ee08"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e0305d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e0305d1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e0305d330"/>
        <function-ref name="get" scoped="" ref="0x7f8e0305d4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e0305d640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e0305dc60"/>
        <function-ref name="set" scoped="" ref="0x7f8e0305d7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e0305d950"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e0305dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f8e0305a338" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f8e0305a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0305a688"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0305a810"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0305a998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0305ab20"/>
        <function-ref name="get" scoped="" ref="0x7f8e0305aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0305ae30"/>
        <function-ref name="set" scoped="" ref="0x7f8e03059020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e030591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f8e0305f7d0" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f8e0305f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0305fb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0305fca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0305fe30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0303e020"/>
        <function-ref name="get" scoped="" ref="0x7f8e0303e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0303e330"/>
        <function-ref name="set" scoped="" ref="0x7f8e0303e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0303e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f8e0303e998" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f8e0303e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0303ece8"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0303ee70"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0303d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0303d1a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e0303d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0303d4b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e0303d640"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0303d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f8e0303cc08" loc="45:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e0303cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e0303b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f8e0303db20" loc="44:/opt/tinyos-2.1.1/tos/platforms/inga/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f8e0303db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0303de70"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e0303c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e0303c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e0303c330"/>
        <function-ref name="get" scoped="" ref="0x7f8e0303c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e0303c640"/>
        <function-ref name="set" scoped="" ref="0x7f8e0303c7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e0303c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8e0303aa50" loc="18:/opt/tinyos-2.1.1/tos/system/NoPinC.nc">
      <component-ref qname="PlatformLedsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x7f8e0303aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e0303ada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e03039020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e030391a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e03039330"/>
        <function-ref name="get" scoped="" ref="0x7f8e030394b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e03039640"/>
        <function-ref name="set" scoped="" ref="0x7f8e030397c8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e03039950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f8e03019578" loc="47:BlinkIngaC.nc">
      <component-ref qname="BlinkIngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x7f8e03019578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e030178f0"/>
        <function-ref name="fired" scoped="" ref="0x7f8e03022020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e03022d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e030228c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e030161c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e03017d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e03022470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e030230f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e03017320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e03023598"/>
        <function-ref name="stop" scoped="" ref="0x7f8e03023a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f8e03010d90" loc="50:BlinkIngaC.nc">
      <component-ref qname="BlinkIngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8e03010d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8e0300f170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f8e030167d8" loc="48:BlinkIngaC.nc">
      <component-ref qname="BlinkIngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x7f8e030167d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e03012a18"/>
        <function-ref name="fired" scoped="" ref="0x7f8e03014158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e03014e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e030149f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e030112e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e03012e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e030145a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e03015370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e03012448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e03015810"/>
        <function-ref name="stop" scoped="" ref="0x7f8e03015cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UserButtonGet" ref="0x7f8e02ff1428" loc="54:BlinkIngaC.nc">
      <component-ref qname="BlinkIngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UserButtonGet" scoped="" ref="0x7f8e02ff1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f8e03724c60"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f8e03025620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02ff5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UserButtonNotify" ref="0x7f8e02fedb80" loc="55:BlinkIngaC.nc">
      <component-ref qname="BlinkIngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UserButtonNotify" scoped="" ref="0x7f8e02fedb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f8e03724c60"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f8e03025620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f8e02ff2b40"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02ff26f0"/>
        <function-ref name="notify" scoped="" ref="0x7f8e02ff0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8e03011730" loc="49:BlinkIngaC.nc">
      <component-ref qname="BlinkIngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e03011730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e03011a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e03011c08"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e03011d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e03010020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e030101a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e03010330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e030104b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e03010ad8"/>
        <function-ref name="set" scoped="" ref="0x7f8e03010640"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e030107c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e03010950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Inga" ref="0x7f8e02ff63b0" loc="51:BlinkIngaC.nc">
      <component-ref qname="BlinkIngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Inga" scoped="" ref="0x7f8e02ff63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Inga"/>
      </instance>
      <interface-functions>
        <function-ref name="temperature" scoped="" ref="0x7f8e02ff6700"/>
        <function-ref name="battery" scoped="" ref="0x7f8e02ff6888"/>
        <function-ref name="msg" scoped="" ref="0x7f8e02ff6a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Eui64" ref="0x7f8e02ff3a50" loc="52:BlinkIngaC.nc">
      <component-ref qname="BlinkIngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Eui64" scoped="" ref="0x7f8e02ff3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f8e02ff3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Inga" ref="0x7f8e03026e80" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/IngaC.nc">
      <component-ref qname="IngaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Inga" scoped="" ref="0x7f8e03026e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Inga"/>
      </instance>
      <interface-functions>
        <function-ref name="temperature" scoped="" ref="0x7f8e02fdf1f8"/>
        <function-ref name="battery" scoped="" ref="0x7f8e02fdf380"/>
        <function-ref name="msg" scoped="" ref="0x7f8e02fdf508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f8e02fdcdf0" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/IngaP.nc">
      <component-ref qname="IngaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e02fdcdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e02fdb170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f8e02fdb460" loc="44:/opt/tinyos-2.1.1/tos/platforms/inga/IngaP.nc">
      <component-ref qname="IngaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f8e02fdb460"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f8e02fdb7b0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f8e02fdb938"/>
        <function-ref name="receive" scoped="" ref="0x7f8e02fdbac0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f8e02fdbc48"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f8e02fdbdd0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f8e02fda020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f8e02fda1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Inga" ref="0x7f8e02fdc418" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/IngaP.nc">
      <component-ref qname="IngaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Inga" scoped="" ref="0x7f8e02fdc418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Inga"/>
      </instance>
      <interface-functions>
        <function-ref name="temperature" scoped="" ref="0x7f8e02fdc768"/>
        <function-ref name="battery" scoped="" ref="0x7f8e02fdc8f0"/>
        <function-ref name="msg" scoped="" ref="0x7f8e02fdca78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartCtl" ref="0x7f8e02fda520" loc="45:/opt/tinyos-2.1.1/tos/platforms/inga/IngaP.nc">
      <component-ref qname="IngaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartCtl" scoped="" ref="0x7f8e02fda520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e02fda870"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02fda9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8e02fcda60" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkIngaAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e02fcda60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02e1fd60"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02e20470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e02e1f1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e02e20d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e02e1e648"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e02e1e1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02e208c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e02e22620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e02e1f790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e02e22ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02e20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f8e02fc44e8" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f8e02fc44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02fc0768"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02fc3e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e02fc2b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e02fc2728"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e02fbf088"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e02fc0bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02fc22d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e02fc3088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e02fc0198"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e02fc3528"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02fc39c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f8e02fbbb50" loc="45:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f8e02fbbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02fb8d98"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02fb94d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e02fb81f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e02fb9d78"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e02fb6688"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e02fb6238"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02fb9928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e02fba6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e02fb87c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e02fbab90"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02fb9088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8e02fb5108" loc="46:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f8e02fb5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02fb5c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e02fbfe18" loc="44:/opt/tinyos-2.1.1/tos/platforms/inga/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e02fbfe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e02fbb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f8e02fa3338" loc="28:/opt/tinyos-2.1.1/tos/platforms/inga/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f8e02fa3338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02fa20c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e02fa29d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e02fa2548"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e02fa2e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e02fb15b8" loc="26:/opt/tinyos-2.1.1/tos/platforms/inga/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e02fb15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e02fb1908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f8e02fad020" loc="27:/opt/tinyos-2.1.1/tos/platforms/inga/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f8e02fad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02fa5690"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02fac6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f8e02fa5088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02facb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8e02fa5b18"/>
        <function-ref name="start" scoped="" ref="0x7f8e02fadd70"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02fac270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8e02eba8f0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8e02eba8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02eb7020"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02eb8020"/>
        <function-ref name="startAt" scoped="" ref="0x7f8e02eb8930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02eb84a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8e02eb74a8"/>
        <function-ref name="start" scoped="" ref="0x7f8e02eb9698"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02eb9b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e02eba148" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e02eba148"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f8e03823d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f8e03823d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e02eba498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8e02eb7a90" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e02eb7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02eb5828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e02eb4190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e02eb5cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e02eb4618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f8e028de0c0" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e028de0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8e028de410"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8e028de598"/>
        <function-ref name="getControlA" scoped="" ref="0x7f8e028de720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8e028de8a8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f8e028dea30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8e028debb8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f8e028ded40"/>
        <function-ref name="setControlA" scoped="" ref="0x7f8e028dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f8e028e9020" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8e028e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e028e7690"/>
        <function-ref name="fired" scoped="" ref="0x7f8e028e86f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f8e028e7088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e028e8b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8e028e7b18"/>
        <function-ref name="start" scoped="" ref="0x7f8e028e9d70"/>
        <function-ref name="stop" scoped="" ref="0x7f8e028e8270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e028eb720" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e028eb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e028eba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f8e028e6128" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e028e6128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e028e6e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e028e47b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e028e4330"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e028e4c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f8e028d9510" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f8e028d9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f8e028d9860"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f8e028d99e8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f8e028d9b70"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f8e028d9cf8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f8e028d9e80"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f8e028cf030"/>
        <function-ref name="getAssr" scoped="" ref="0x7f8e028cf1b8"/>
        <function-ref name="setAssr" scoped="" ref="0x7f8e028cf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f8e028dd3b0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8e028dd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8e028dac20"/>
        <function-ref name="fired" scoped="" ref="0x7f8e028dc980"/>
        <function-ref name="get" scoped="" ref="0x7f8e028dc020"/>
        <function-ref name="reset" scoped="" ref="0x7f8e028dce08"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e028d90f8"/>
        <function-ref name="set" scoped="" ref="0x7f8e028dc4a8"/>
        <function-ref name="start" scoped="" ref="0x7f8e028da310"/>
        <function-ref name="stop" scoped="" ref="0x7f8e028da798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f8e028e3228" loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm1284AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1284AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e028e3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8e028df310"/>
        <function-ref name="test" scoped="" ref="0x7f8e028e1998"/>
        <function-ref name="get" scoped="" ref="0x7f8e028e3da8"/>
        <function-ref name="setScale" scoped="" ref="0x7f8e028df798"/>
        <function-ref name="getScale" scoped="" ref="0x7f8e028dfc70"/>
        <function-ref name="reset" scoped="" ref="0x7f8e028e2bd0"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e028e2748"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e028e1e20"/>
        <function-ref name="set" scoped="" ref="0x7f8e028e2270"/>
        <function-ref name="start" scoped="" ref="0x7f8e028e1088"/>
        <function-ref name="stop" scoped="" ref="0x7f8e028e1510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8e02f295c0" loc="83:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <component-ref qname="HplAtm1284Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e02f295c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8e02f29910"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8e02f29a98"/>
        <function-ref name="getControlA" scoped="" ref="0x7f8e02f29c20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8e02f29da8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f8e02f28020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8e02f281a8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f8e02f28330"/>
        <function-ref name="setControlA" scoped="" ref="0x7f8e02f284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f8e02f24c38" loc="85:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <component-ref qname="HplAtm1284Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f8e02f24c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f8e02f23020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f8e02f231a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f8e02f23330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f8e02f234b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f8e02f23640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f8e02f237c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f8e02f23950"/>
        <function-ref name="setAssr" scoped="" ref="0x7f8e02f23ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8e02f28980" loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <component-ref qname="HplAtm1284Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8e02f28980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8e02f24270"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02f25020"/>
        <function-ref name="get" scoped="" ref="0x7f8e02f27560"/>
        <function-ref name="reset" scoped="" ref="0x7f8e02f254a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e02f246f8"/>
        <function-ref name="set" scoped="" ref="0x7f8e02f279e8"/>
        <function-ref name="start" scoped="" ref="0x7f8e02f25930"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02f25db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8e02f2e508" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncC.nc">
      <component-ref qname="HplAtm1284Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e02f2e508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8e02f2a6f8"/>
        <function-ref name="test" scoped="" ref="0x7f8e02f2bdb8"/>
        <function-ref name="get" scoped="" ref="0x7f8e02f2d0c0"/>
        <function-ref name="setScale" scoped="" ref="0x7f8e02f2ab80"/>
        <function-ref name="getScale" scoped="" ref="0x7f8e02f29088"/>
        <function-ref name="reset" scoped="" ref="0x7f8e02f2b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e02f2da20"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e02f2a270"/>
        <function-ref name="set" scoped="" ref="0x7f8e02f2d548"/>
        <function-ref name="start" scoped="" ref="0x7f8e02f2b4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02f2b930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f8e02f1a828" loc="85:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f8e02f1a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f8e02f1ab78"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f8e02f1ad00"/>
        <function-ref name="getControlA" scoped="" ref="0x7f8e02f18020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f8e02f181a8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f8e02f18330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f8e02f184b8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f8e02f18640"/>
        <function-ref name="setControlA" scoped="" ref="0x7f8e02f187c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f8e02f15db0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f8e02f15db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f8e02f13170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f8e02f13520" loc="88:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f8e02f13520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f8e02f13870"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f8e02f139f8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f8e02f13b80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f8e02f13d08"/>
        <function-ref name="countBusy" scoped="" ref="0x7f8e02f12020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f8e02f121a8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f8e02f12330"/>
        <function-ref name="setAssr" scoped="" ref="0x7f8e02f124b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f8e02f18c90" loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f8e02f18c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f8e02f154a8"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02f16238"/>
        <function-ref name="get" scoped="" ref="0x7f8e02f17858"/>
        <function-ref name="reset" scoped="" ref="0x7f8e02f166c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e02f15930"/>
        <function-ref name="set" scoped="" ref="0x7f8e02f17ce0"/>
        <function-ref name="start" scoped="" ref="0x7f8e02f16b48"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02f15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8e02f1f728" loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm1284Timer2AsyncP.nc">
      <component-ref qname="HplAtm1284Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e02f1f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f8e02f1b930"/>
        <function-ref name="test" scoped="" ref="0x7f8e02f1b020"/>
        <function-ref name="get" scoped="" ref="0x7f8e02f1e3a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f8e02f1bdb8"/>
        <function-ref name="getScale" scoped="" ref="0x7f8e02f1a2f0"/>
        <function-ref name="reset" scoped="" ref="0x7f8e02f1c1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e02f1ed08"/>
        <function-ref name="isOn" scoped="" ref="0x7f8e02f1b4a8"/>
        <function-ref name="set" scoped="" ref="0x7f8e02f1e830"/>
        <function-ref name="start" scoped="" ref="0x7f8e02f1c680"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02f1cb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f8e02e84cf0" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f8e02e84cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e02e830a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e02e83228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f8e02e88c70" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f8e02e88c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02e84410"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02e864a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f8e02e86db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02e86930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f8e02e84898"/>
        <function-ref name="start" scoped="" ref="0x7f8e02e879f0"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02e86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8e02e8dab0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e02e8dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02e8ad60"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02e8b470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e02e8a1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e02e8bd10"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e02e88648"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e02e881f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02e8b8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e02e8c620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e02e8a790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e02e8cac0"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02e8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f8e02e36930" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f8e02e36930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e02e36c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e02e36e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f8e02e3b858" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f8e02e3b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02e37bc0"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02e391c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e02e37020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e02e39a60"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e02e364d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e02e36088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02e39610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e02e3a3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e02e375f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e02e3a878"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02e3ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8e02e415e0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e02e415e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02e3d988"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02e3f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e02e3fd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e02e3f900"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e02e3b2d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e02e3ddf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02e3f490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e02e40198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e02e3d398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e02e40658"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02e40b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f8e02e32128" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f8e02e32128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02e32ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f8e02e29330" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f8e02e29330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02e280c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f8e02e289d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f8e02e28548"/>
        <function-ref name="overflow" scoped="" ref="0x7f8e02e28e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f8e02e1c020" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkIngaAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f8e02e1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f8e0379ea30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f8e0379ed88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f8e02e182b8"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02e1a978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f8e02e196c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f8e02e19278"/>
        <function-ref name="getdt" scoped="" ref="0x7f8e02e18b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f8e02e18708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f8e02e1adc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f8e02e1cb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f8e02e19c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f8e02e1a088"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02e1a528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f8e02e130c0" loc="37:/opt/tinyos-2.1.1/tos/platforms/inga/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8e02e130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f8e02e13410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f8e02e10020" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/IngaIeeeEui64P.nc">
      <component-ref qname="IngaIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f8e02e10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f8e02e10370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f8e02e106e8" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/IngaIeeeEui64P.nc">
      <component-ref qname="IngaIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f8e02e106e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e02e10a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f8e02e10cf0" loc="45:/opt/tinyos-2.1.1/tos/platforms/inga/IngaIeeeEui64P.nc">
      <component-ref qname="IngaIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f8e02e10cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f8e02e0f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f8e02df9890" loc="47:/opt/tinyos-2.1.1/tos/platforms/inga/IngaIeeeEui64P.nc">
      <component-ref qname="IngaIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8e02df9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02df9be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8e02df9d68"/>
        <function-ref name="request" scoped="" ref="0x7f8e02dfe020"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02dfe1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02dfe330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f8e02e02c30" loc="46:/opt/tinyos-2.1.1/tos/platforms/inga/IngaIeeeEui64P.nc">
      <component-ref qname="IngaIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02e02c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f8e02e0fd98"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f8e02e0c088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8e02e0e820"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8e02e00ba0"/>
        <function-ref name="write" scoped="" ref="0x7f8e02e0d3c8"/>
        <function-ref name="readDone" scoped="" ref="0x7f8e02e00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8e02de81d0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="LocalIeeeEui64C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8e02de81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02de8520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8e02de86a8"/>
        <function-ref name="request" scoped="" ref="0x7f8e02de8830"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02de89b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02de8b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f8e02c3e020" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="LocalIeeeEui64C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02c3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f8e02e0fd98"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f8e02e0c088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8e02c3eba0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8e02c3b020"/>
        <function-ref name="write" scoped="" ref="0x7f8e02c3d790"/>
        <function-ref name="readDone" scoped="" ref="0x7f8e02c3c388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8e02ddb1c8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8e02ddb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02ddb518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8e02ddb6a0"/>
        <function-ref name="request" scoped="" ref="0x7f8e02ddb828"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02ddb9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02ddbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f8e02dd94f8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02dd94f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f8e02e0fd98"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f8e02e0c088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8e02dd80c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8e02dd63c8"/>
        <function-ref name="write" scoped="" ref="0x7f8e02dd8c40"/>
        <function-ref name="readDone" scoped="" ref="0x7f8e02dd7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f8e02d5cd18" loc="82:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f8e02d5cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f8e02d5a0d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8e02d5a260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f8e02d59960" loc="86:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8e02d59960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f8e02d59cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f8e02d59e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f8e02d5a4a8" loc="83:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8e02d5a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02d5a7f8"/>
        <function-ref name="requested" scoped="" ref="0x7f8e02d5a980"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02d5ab08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02d5ac90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8e02d5ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8e02d5c020" loc="81:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8e02d5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02d5c390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8e02d5c518"/>
        <function-ref name="request" scoped="" ref="0x7f8e02d5c6a0"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02d5c828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02d5c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f8e02d590e0" loc="84:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8e02d590e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8e02d59430"/>
        <function-ref name="userId" scoped="" ref="0x7f8e02d595b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e02867dc0" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e02867dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e02865170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f8e028653f8" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f8e028653f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f8e02865748"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f8e028658d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f8e02865a58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8e02865be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f8e02862200" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f8e02862200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f8e02862570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8e028626f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f8e02861e18" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f8e02861e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f8e028601c0"/>
        <function-ref name="configure" scoped="" ref="0x7f8e02860348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f8e028605d0" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f8e028605d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f8e02860920"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f8e02860aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f8e02860c30"/>
        <function-ref name="dequeue" scoped="" ref="0x7f8e02860db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f8e02862940" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8e02862940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02862c90"/>
        <function-ref name="requested" scoped="" ref="0x7f8e02862e18"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02861020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e028611a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8e02861330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f8e0285f060" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e0285f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e0285f3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e0285f538"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e0285f6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e0285f848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e0285f9d0"/>
        <function-ref name="get" scoped="" ref="0x7f8e0285fb58"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e0285fce0"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e0285d330"/>
        <function-ref name="set" scoped="" ref="0x7f8e0285d020"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e0285fe68"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e0285d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8e028634b0" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8e028634b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02863820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8e028639a8"/>
        <function-ref name="request" scoped="" ref="0x7f8e02863b30"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02863cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02863e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f8e02861578" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8e02861578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8e028618c8"/>
        <function-ref name="userId" scoped="" ref="0x7f8e02861a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f8e0285d5f8" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f8e0285d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e0285d948"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e0285dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f8e02d55820" loc="52:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f8e02d55820"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f8e02d55b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f8e02d55db8" loc="53:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f8e02d55db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02d48170"/>
        <function-ref name="requested" scoped="" ref="0x7f8e02d482f8"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02d48480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02d48608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f8e02d48790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f8e02d55100" loc="50:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f8e02d55100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e02d55450"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02d555d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f8e02d489d8" loc="54:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f8e02d489d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f8e02d48d28"/>
        <function-ref name="userId" scoped="" ref="0x7f8e02d47020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f8e02d07318" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f8e02d07318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f8e02d07668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f8e02d0c888" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f8e02d0c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f8e02e0fd98"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f8e02e0c088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8e02d0a490"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8e02d087c8"/>
        <function-ref name="write" scoped="" ref="0x7f8e02d09088"/>
        <function-ref name="readDone" scoped="" ref="0x7f8e02d09c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f8e02d44020" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f8e02d44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02d44390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8e02d44518"/>
        <function-ref name="request" scoped="" ref="0x7f8e02d446a0"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02d44828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02d449b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f8e02d44e60" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02d44e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f8e02e0fd98"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f8e02e0c088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8e02d11a28"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8e02d0edc8"/>
        <function-ref name="write" scoped="" ref="0x7f8e02d0f608"/>
        <function-ref name="readDone" scoped="" ref="0x7f8e02d0e228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f8e02d0da78" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f8e02d0da78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f8e02d0dde8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f8e02d0c020"/>
        <function-ref name="request" scoped="" ref="0x7f8e02d0c1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f8e02d0c330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f8e02d0c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f8e02ca2318" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f8e02ca2318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f8e02ca2668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f8e02ca2930" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f8e02ca2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f8e02ca2c80"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f8e02ca2e08"/>
        <function-ref name="setStart" scoped="" ref="0x7f8e02ca1020"/>
        <function-ref name="status" scoped="" ref="0x7f8e02ca11a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f8e02ca1330"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f8e02ca14b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f8e02ca1640"/>
        <function-ref name="read" scoped="" ref="0x7f8e02ca17c8"/>
        <function-ref name="init" scoped="" ref="0x7f8e02ca1950"/>
        <function-ref name="enableAck" scoped="" ref="0x7f8e02ca1ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f8e02ca1c60"/>
        <function-ref name="hasStart" scoped="" ref="0x7f8e02ca1de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8e02ca0020"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f8e02ca02a8"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02ca0430"/>
        <function-ref name="write" scoped="" ref="0x7f8e02ca05b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f8e02ca0740"/>
        <function-ref name="off" scoped="" ref="0x7f8e02ca08c8"/>
        <function-ref name="setStop" scoped="" ref="0x7f8e02ca0a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f8e02ca0bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f8e02ca0d60"/>
        <function-ref name="hasStop" scoped="" ref="0x7f8e02c9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f8e02c9f2e8" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f8e02c9f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e02c9f638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e02c9f7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e02c9f948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e02c9fad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e02c9fc58"/>
        <function-ref name="get" scoped="" ref="0x7f8e02c9fde0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e02c9e020"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e02c9e640"/>
        <function-ref name="set" scoped="" ref="0x7f8e02c9e330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e02c9e1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e02c9e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f8e02c9e908" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f8e02c9e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e02c9ec58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e02c9ede0"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e02c9d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e02c9d1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e02c9d330"/>
        <function-ref name="get" scoped="" ref="0x7f8e02c9d4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e02c9d640"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e02c9dc60"/>
        <function-ref name="set" scoped="" ref="0x7f8e02c9d950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e02c9d7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e02c9dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f8e02d04e60" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f8e02d04e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f8e02ca71e8"/>
        <function-ref name="stop" scoped="" ref="0x7f8e02ca7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f8e02ca7700" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f8e02ca7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f8e02e0fd98"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f8e02e0c088"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f8e02ca63a8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f8e02ca3790"/>
        <function-ref name="write" scoped="" ref="0x7f8e02ca4020"/>
        <function-ref name="readDone" scoped="" ref="0x7f8e02ca4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f8e02c9a7d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f8e02c9a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f8e02c9ab20"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f8e02c9aca8"/>
        <function-ref name="setStart" scoped="" ref="0x7f8e02c9ae30"/>
        <function-ref name="status" scoped="" ref="0x7f8e02c97020"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f8e02c971a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f8e02c97330"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f8e02c974b8"/>
        <function-ref name="read" scoped="" ref="0x7f8e02c97640"/>
        <function-ref name="init" scoped="" ref="0x7f8e02c977c8"/>
        <function-ref name="enableAck" scoped="" ref="0x7f8e02c97950"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f8e02c97ad8"/>
        <function-ref name="hasStart" scoped="" ref="0x7f8e02c97c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8e02c97de8"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f8e02c96120"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02c962a8"/>
        <function-ref name="write" scoped="" ref="0x7f8e02c96430"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f8e02c965b8"/>
        <function-ref name="off" scoped="" ref="0x7f8e02c96740"/>
        <function-ref name="setStop" scoped="" ref="0x7f8e02c968c8"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f8e02c96a50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f8e02c96bd8"/>
        <function-ref name="hasStop" scoped="" ref="0x7f8e02c96d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f8e02c91020" loc="48:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f8e02c91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f8e02c91370"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f8e02c914f8"/>
        <function-ref name="setStart" scoped="" ref="0x7f8e02c91680"/>
        <function-ref name="status" scoped="" ref="0x7f8e02c91808"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f8e02c91990"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f8e02c91b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f8e02c91ca0"/>
        <function-ref name="read" scoped="" ref="0x7f8e02c91e28"/>
        <function-ref name="init" scoped="" ref="0x7f8e02c90020"/>
        <function-ref name="enableAck" scoped="" ref="0x7f8e02c901a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f8e02c90330"/>
        <function-ref name="hasStart" scoped="" ref="0x7f8e02c904b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f8e02c90640"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f8e02c908c8"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02c90a50"/>
        <function-ref name="write" scoped="" ref="0x7f8e02c90bd8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f8e02c90d60"/>
        <function-ref name="off" scoped="" ref="0x7f8e02c8f020"/>
        <function-ref name="setStop" scoped="" ref="0x7f8e02c8f1a8"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f8e02c8f330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f8e02c8f4b8"/>
        <function-ref name="hasStop" scoped="" ref="0x7f8e02c8f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f8e02c8f9c8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f8e02c8f9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02c8fd18"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02c8e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02c8e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02c8e330"/>
        <function-ref name="get" scoped="" ref="0x7f8e02c8e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02c8e640"/>
        <function-ref name="set" scoped="" ref="0x7f8e02c8e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02c8e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f8e02c8ec80" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1284/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f8e02c8ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02c8d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02c8d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02c8d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02c8d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f8e02c8d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02c8d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f8e02c8d950"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02c8dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f8e02c5ad08" loc="35:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f8e02c5ad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f8e02c570a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f8e02c57358" loc="36:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f8e02c57358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f8e02c576a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f8e02c57830"/>
        <function-ref name="led1On" scoped="" ref="0x7f8e02c579b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f8e02c57b40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f8e02c57cc8"/>
        <function-ref name="get" scoped="" ref="0x7f8e02c57e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f8e02c56020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f8e02c56640"/>
        <function-ref name="set" scoped="" ref="0x7f8e02c561a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f8e02c56330"/>
        <function-ref name="led2On" scoped="" ref="0x7f8e02c564b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f8e02c356e8" loc="49:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Notify" scoped="" ref="0x7f8e02c356e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f8e03724c60"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f8e03025620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f8e02c347c0"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02c34370"/>
        <function-ref name="notify" scoped="" ref="0x7f8e02c34c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f8e02e14578" loc="48:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x7f8e02e14578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f8e03724c60"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f8e03025620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02c350f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f8e02c2f020" loc="41:/opt/tinyos-2.1.1/tos/platforms/inga/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f8e02c2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02c2f370"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02c2f4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8e02c2f680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8e02c2f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f8e02c33990" loc="40:/opt/tinyos-2.1.1/tos/platforms/inga/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x7f8e02c33990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02c33ce0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02c33e68"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02c30020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02c301a8"/>
        <function-ref name="get" scoped="" ref="0x7f8e02c30330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02c304b8"/>
        <function-ref name="set" scoped="" ref="0x7f8e02c30640"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02c307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f8e02c28c88" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f8e02c28c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e02c27020"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02c271a8"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02c27330"/>
        <function-ref name="edge" scoped="" ref="0x7f8e02c274b8"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02c27640"/>
        <function-ref name="getValue" scoped="" ref="0x7f8e02c277c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f8e02c27b38" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f8e02c27b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e02c22020"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02c221a8"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02c22330"/>
        <function-ref name="edge" scoped="" ref="0x7f8e02c224b8"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02c22640"/>
        <function-ref name="getValue" scoped="" ref="0x7f8e02c227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f8e02c24de0" loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f8e02c24de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e02c28170"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02c282f8"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02c28480"/>
        <function-ref name="edge" scoped="" ref="0x7f8e02c28608"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02c28790"/>
        <function-ref name="getValue" scoped="" ref="0x7f8e02c28918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f8e02c1e020" loc="44:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f8e02c1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02c1e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f8e02c1e758" loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f8e02c1e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02c1eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f8e02c1b850" loc="43:/opt/tinyos-2.1.1/tos/chips/atm1284/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f8e02c1b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02c1bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8e02c106a8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8e02c106a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e02c109f8"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02c10b80"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02c10d08"/>
        <function-ref name="edge" scoped="" ref="0x7f8e02bfd020"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02bfd1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f8e02bfd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8e02bfd5f8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8e02bfd5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02bfd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8e02bf93e0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8e02bf93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e02bf9730"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02bf98b8"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02bf9a40"/>
        <function-ref name="edge" scoped="" ref="0x7f8e02bf9bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02bf9d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f8e02bf8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8e02bf82e8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8e02bf82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02bf8638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f8e02bf5020" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f8e02bf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e02bf5370"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02bf54f8"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02bf5680"/>
        <function-ref name="edge" scoped="" ref="0x7f8e02bf5808"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02bf5990"/>
        <function-ref name="getValue" scoped="" ref="0x7f8e02bf5b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f8e02bf5de0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f8e02bf5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02bf4170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f8e02bf08d0" loc="9:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f8e02bf08d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f8e02bf0c20"/>
        <function-ref name="fired" scoped="" ref="0x7f8e02bf0da8"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02be4020"/>
        <function-ref name="edge" scoped="" ref="0x7f8e02be41a8"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02be4330"/>
        <function-ref name="getValue" scoped="" ref="0x7f8e02be44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f8e02bf1d98" loc="8:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f8e02bf1d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02bf0170"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02bf02f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8e02bf0480"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8e02bf0608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f8e02bc8020" loc="51:/opt/tinyos-2.1.1/tos/platforms/inga/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendEvent" scoped="" ref="0x7f8e02bc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f8e02bc8370"/>
        <function-ref name="runTask" scoped="" ref="0x7f8e02bc84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f8e02bc9430" loc="46:/opt/tinyos-2.1.1/tos/platforms/inga/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f8e02bc9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f8e02bc9780"/>
        <function-ref name="disable" scoped="" ref="0x7f8e02bc9908"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f8e02bc9a90"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f8e02bc9c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f8e02bcd978" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Notify" scoped="" ref="0x7f8e02bcd978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f8e02bcc978"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02bcc528"/>
        <function-ref name="notify" scoped="" ref="0x7f8e02bccdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f8e02bce8e0" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x7f8e02bce8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02bcd458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f8e02bca280" loc="45:/opt/tinyos-2.1.1/tos/platforms/inga/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x7f8e02bca280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f8e02bca5d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f8e02bca758"/>
        <function-ref name="toggle" scoped="" ref="0x7f8e02bca8e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f8e02bcaa68"/>
        <function-ref name="get" scoped="" ref="0x7f8e02bcabf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f8e02bcad78"/>
        <function-ref name="set" scoped="" ref="0x7f8e02bc9020"/>
        <function-ref name="clr" scoped="" ref="0x7f8e02bc91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7f8e02bc0290" loc="45:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetLower" scoped="" ref="0x7f8e02bc0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02bc0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f8e02bc37e8" loc="43:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Notify" scoped="" ref="0x7f8e02bc37e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f8e03724c60"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f8e03025620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f8e02bc27c0"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02bc2370"/>
        <function-ref name="notify" scoped="" ref="0x7f8e02bc2c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f8e02bbf468" loc="46:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NotifyLower" scoped="" ref="0x7f8e02bbf468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f8e02bbe470"/>
        <function-ref name="enable" scoped="" ref="0x7f8e02bbe020"/>
        <function-ref name="notify" scoped="" ref="0x7f8e02bbe8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f8e02bc6680" loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x7f8e02bc6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f8e03724c60"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f8e03025620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f8e02bc31f8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f8e037228a8" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f8e03720580" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f8e03717810" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f8e037175a0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f8e0371a020" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f8e0371aa18" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f8e0371a7a8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f8e037194d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f8e03719260" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f8e03719d18" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f8e037074e8" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f8e03707bb0" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f8e03708768" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f8e03705968" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8e03708e08" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f8e03705290" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8e0370b9e0" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f8e037080d8" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f8e038090d8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f8e03805020" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f8e038097f0" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f8e037feba0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f8e037fc3e0" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f8e0375e828" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.1.1/tos/platforms/inga/hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10; @author Alan Broad &#60;abroad@xbow.com>&#10; @author Matt Miller &#60;mmiller@xbow.com>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f8e03741bd0" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f8e037c3940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f8e0373f6d8" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f8e03547c08" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8e03547998" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f8e035450a8" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8e03546db8" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8e03547020" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8e03546448" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8e03542128" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f8e035497e0" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f8e03549b40" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e03549e50" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f8e0353e460" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e0353de70" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e0353e1a8" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f8e0353d668" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f8e035413d0" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e03541160" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8e03540820" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e03540278" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f8e035405a0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f8e035346a8" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e03534438" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f8e03533670" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e03533400" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f8e035307c0" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e035301f8" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e03530508" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f8e0352f8f8" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f8e03531a38" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e035314a8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e035317b8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f8e03539920" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
              <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e03539020" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f8e03539348" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e03539658" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f8e03512428" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f8e03512b60" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f8e03510328" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f8e0350f1d8" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f8e0350e810" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8e0350c020" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f8e03510a40" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8e0350cb20" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f8e0350c8b0" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f8e03513cd8" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f8e0350f948" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f8e0350e0d8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f8e0351a520" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e0351a2b0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f8e03519630" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e035193c0" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f8e03517700" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e03517490" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f8e0351fb08" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f8e03568020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e0351f898" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f8e03529b80" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e03529910" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f8e0352b110" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f8e0352bb68" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e0352b8f8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f8e03525450" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e0352ae60" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f8e035251d0" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f8e0352a020" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e03527900" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f8e03527c38" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f8e035683d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f8e03523768" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e035234f8" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f8e035229d8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e03522458" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f8e03522758" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f8e03569b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f8e03524600" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e03524390" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f8e0351d020" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f8e03568020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f8e0351e920" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f8e0351ec50" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f8e03568020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f8e0351dd88" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f8e03568020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8e03502bb0" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e03502620" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e03502930" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f8e034fb2d8" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e034fdc90" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e034fb020" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f8e034fd488" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f8e034ff0a8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e03500e08" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8e034fe5c8" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e034fe020" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f8e034fe348" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f8e0349f2a0" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e034a0b70" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f8e0349f020" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f8e034a1458" loc="15:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f8e034a02a0" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e034a1c70" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f8e03552860"/>
                <typename><typedef-ref name="message_t" ref="0x7f8e03551da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f8e034a0020" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f8e0346ee20" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8e0346b600" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f8e03468328" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f8e0346dbb0" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f8e034731d8" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f8e03472528" loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f8e0346f020" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8e03470d60" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f8e03472d40" loc="68:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f8e03473cc8" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8e03473a58" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f8e0346f818" loc="89:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f8e034705b8" loc="74:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f8e0347a020" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f8e0347a8d8" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f8e0347b668" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f8e0347b3f8" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f8e03479430" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8e034791c0" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f8e03476020" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f8e03476bc8" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8e03476958" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f8e03475640" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f8e034753d0" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8e033509b8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8e03350418" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e03350738" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f8e0334b4a8" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f8e0334b238" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f8e033492a0" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8e0334bc20" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e03349020" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f8e0334c1d8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f8e03348a38" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8e03348160" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e03348480" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8e033487a8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f8e0334ca50" loc="72:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f8e0334e2b0" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f8e0334d880" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f8e0334dba0" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f8e0334e020" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f8e033298d8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f8e03329668" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f8e033286b8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f8e03328100" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f8e03328438" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8e03324c88" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8e03324c88"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8e03320020" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e03320020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f8e033208b8" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e03320020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f8e0331e900" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f8e0331e110" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f8e0331d020" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f8e03311578" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f8e03312738" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f8e0330ec08" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8e0330e998" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f8e0330fc08" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f8e033157f8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f8e03312020" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f8e03312e58" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f8e03311c58" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f8e0330f578" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8e0330f308" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f8e0330e328" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f8e0322b960" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f8e03229cf0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f8e0322ea88" loc="79:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f8e03227e38" loc="91:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f8e032276d8" loc="88:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f8e03227468" loc="88:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f8e0322abf8" loc="83:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8e0322a988" loc="83:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f8e032267e8" loc="92:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f8e03226578" loc="92:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f8e0322b258" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f8e03229590" loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8e03229320" loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f8e0322a2d0" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8e0322a060" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f8e0322c6a8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e0322c6a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f8e0321e108" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f8e0321fe48" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f8e0321f020" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8e03223020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e0322c6a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f8e03222338" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e0322c6a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f8e032220c8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e0322c6a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f8e03222a78" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f8e0321f770" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8e03223958" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e0322c6a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f8e032236e8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e0322c6a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8e032201d8" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8e032208c0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f8e032191c8" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e032191c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f8e032157f0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8e03217b60" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8e03219a80" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e032191c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f8e03216290" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f8e03213020" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8e03217420" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e032191c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f8e032171b0" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e032191c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8e03216988" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8e032150d8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f8e03239418" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8e03239418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f8e03234900" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f8e03235a40" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f8e03239cb8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8e03239418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f8e03233290" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f8e03233020" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f8e03233a10" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f8e032374c0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f8e03238d50" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f8e032341d8" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f8e03238630" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8e03239418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f8e032383c0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f8e03239418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8e03237bb8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8e03235328" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f8e030b1020" loc="43:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8e030b1020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f8e030af020" loc="73:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8e030b1020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f8e030ad8e8" loc="90:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8e030b1020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f8e030ad678" loc="90:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8e030b1020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f8e03e00488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f8e03e00488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f8e030ab7b0" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8e030b1020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f8e030ab540" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f8e030b07b0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f8e030afb40" loc="81:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f8e030b1020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f8e030b1848" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f8e030b0020" loc="58:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8e030245a8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8e030245a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f8e0301a020" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8e0301f9b0" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f8e0301d5b8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8e0301d020" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f8e0301d338" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f8e0301e8a8" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f8e03019020" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f8e0301a740" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f8e0301e110" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f8e030210a8" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8e03024e08" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f8e0301c5b8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8e0301c020" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f8e0301c338" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f8e03021ae8" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8e03021878" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8e0301f328" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Get.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f8e0300d660" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8e0300d660"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f8e0300de78" loc="55:/opt/tinyos-2.1.1/tos/interfaces/Get.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8e0300d660"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f8e02ff5b80" loc="52:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8e02ff5b80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f8e02fefbd8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f8e02fef420" loc="59:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f8e02fed5a8" loc="74:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8e02ff5b80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f8e02fed338" loc="74:/opt/tinyos-2.1.1/tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f8e02ff5b80"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Inga" loc="53:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
      <function event="" provided="0" name="temperature" ref="0x7f8e02ff7e58" loc="69:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
          <short>&#10; Signal answer to SIPC_CMD_ID_READ_TEMPERATURE&#10; &#10; </short>
          <long>&#10; Signal answer to SIPC_CMD_ID_READ_TEMPERATURE&#10; &#10; @param 'int16_t celsius' - tempeature in celsius (-15 to 60 degree)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Inga"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x7f8e03dfb658"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="celsius" ref="0x7f8e02ff7be8" loc="69:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x7f8e03dfb658"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="battery" ref="0x7f8e02ff72d0" loc="62:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
          <short>&#10; Signal answer to SIPC_CMD_ID_READ_BATTERY&#10; &#10; </short>
          <long>&#10; Signal answer to SIPC_CMD_ID_READ_BATTERY&#10; &#10; @param 'uint16_t voltage' - battery voltage (in mV)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Inga"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="voltage" ref="0x7f8e02ff7060" loc="62:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msg" ref="0x7f8e02ff8998" loc="55:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
        <interfacedef-ref qname="Inga"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f8e02ff8728" loc="55:/opt/tinyos-2.1.1/tos/platforms/inga/Inga.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="32:/opt/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f8e02ff3698" loc="37:/opt/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f8e02ff46e0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f8e02ff4e08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8e02fb3340" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8e02fb3340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f8e02fb3bd0" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f8e03dfa608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f8e02fab3e8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f8e02fab3e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f8e02fab618" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f8e02fa6020" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8e02fa9070" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f8e02fa85c0" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f8e02fa8020" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f8e02fa8340" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f8e02fa97b8" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f8e02fa67a0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f8e02faa108" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f8e02fabe68" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f8e02fab618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8e02faa8d8" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/Atm128Timer.h">
        <short>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.</short>
        <long>&#10; This file contains the configuration constants for the Atmega1284&#10; clocks and timers.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Martin Cerveny&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f8e02f7fd28" loc="89:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f8e02f80c20" loc="85:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f8e02f84a78" loc="79:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f8e02f7f5c8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f8e02f7f358" loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f8e02f804c0" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8e02f80250" loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f8e02f7d6e0" loc="90:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f8e02f7d470" loc="90:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f8e02f811d8" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f8e02f81b00" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f8e02f81890" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f8e02f74cd8" loc="92:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f8e02f76de0" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f8e02f75528" loc="74:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f8e02f75cf8" loc="80:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f8e02f724b0" loc="98:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f8e02f74508" loc="86:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f8e02f79c10" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8e03783160"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f8e03783568"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f8e02f76610" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8e03783160"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f8e03783568"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f8e02f763a0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1284/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f8e03783160"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f8e03783568"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f8e02dfbac0" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f8e02dfcb98" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f8e02dfc2a8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f8e02dfb360" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f8e02df9500" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f8e02e0b430" loc="48:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f8e02e0b430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f8e02e0a948" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f8e02e0c440"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f8e02e0bcb0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f8e02e0c440"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f8e02e0a020" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f8e02e0a350" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8e02e0a6a8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f8e02e02020" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8e02e04240" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f8e02e04570" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f8e02e048a0" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8e02e04bf8" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8e02e096c0" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f8e02e0c440"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f8e02e089e0" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f8e02e0c440"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f8e02e08d10" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f8e02e090c8" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8e02e09420" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f8e02e06368" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f8e02e056a8" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f8e02e059d8" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f8e03dfbb98"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f8e02e05d08" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f8e02e060c8" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f8e02dca020" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f8e02dca8e8" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f8e02dc1bf0" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f8e02dc1440" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f8e02dc8cb8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f8e02dc7cc8" loc="73:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f8e02dc8498" loc="46:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f8e02dc7500" loc="65:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f8e02dc65c0" loc="81:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f8e02dc3328" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f8e02dc3b18" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f8e02db8ac8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8e02dc2c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f8e02db8858" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8e02dc2c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f8e02dbcae8" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f8e02db95e8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8e02dc2c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f8e02db9378" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f8e02dc2c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f8e02db8020" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f8e02dc2c40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f8e02d53a20" loc="52:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f8e02d54a30" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f8e02d51258" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f8e02d345c8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f8e02cf8110" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f8e02cf87d0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f8e02cf7908" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f8e02cf7698" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f8e02cfaa00" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f8e02cf3020" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f8e02cefaa8" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f8e02cf3950" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f8e02cf36e0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f8e02ced258" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f8e02cfdc40" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f8e02cfd9d0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f8e02cf4918" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f8e02cf46a8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f8e02cf21d8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f8e02cf6020" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f8e02cf1110" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f8e02cf7020" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f8e02cef3c8" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f8e02cef158" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f8e02ceeb50" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f8e02cee8e0" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f8e03dfb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f8e02cf2978" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f8e02cfa328" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f8e02cf68d8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f8e02cf6668" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f8e02cf1ac0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f8e02cf1850" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f8e02cee258" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f8e02cf4020" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f8e02c2cbf8" loc="57:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f8e02c2c4a8" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f8e02c2dd50" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f8e02c2d508" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f8e03800780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f8e02c25178" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f8e02c24a88" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f8e02c26a20" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f8e02c242d0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f8e02c24060" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f8e02c26328" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f8e02c258b8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f8e038244c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f8e02c1b4e0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
